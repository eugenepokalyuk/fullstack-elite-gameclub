[{"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/index.tsx":"1","/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/App/App.tsx":"2","/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/Constructor/Constructor.tsx":"3","/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/ConstructorItem/ConstructorItem.tsx":"4","/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/AppHeader/AppHeader.tsx":"5","/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/pages/HomePage/HomePage.tsx":"6","/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/pages/SettingsPage/SettingsPage.tsx":"7","/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/utils/routePath.ts":"8","/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/ConstructorPlayStation/ConstructorPlayStation.tsx":"9","/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/utils/api.ts":"10","/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/pages/StorePage/StorePage.tsx":"11","/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/pages/StatPage/StatPage.tsx":"12","/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/Store/Store.tsx":"13"},{"size":380,"mtime":1696322407659,"results":"14","hashOfConfig":"15"},{"size":1205,"mtime":1696353387278,"results":"16","hashOfConfig":"15"},{"size":868,"mtime":1696508354816,"results":"17","hashOfConfig":"15"},{"size":8893,"mtime":1696506909672,"results":"18","hashOfConfig":"15"},{"size":2207,"mtime":1696508406427,"results":"19","hashOfConfig":"15"},{"size":230,"mtime":1696508346579,"results":"20","hashOfConfig":"15"},{"size":296,"mtime":1696508332364,"results":"21","hashOfConfig":"15"},{"size":145,"mtime":1696327948782,"results":"22","hashOfConfig":"15"},{"size":688,"mtime":1695645635553,"results":"23","hashOfConfig":"15"},{"size":714,"mtime":1696423660390,"results":"24","hashOfConfig":"15"},{"size":280,"mtime":1696508339427,"results":"25","hashOfConfig":"15"},{"size":468,"mtime":1696508336350,"results":"26","hashOfConfig":"15"},{"size":4951,"mtime":1696508308165,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"krbkya",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/index.tsx",[],[],[],"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/App/App.tsx",["71","72","73","74","75","76"],[],"import React, { useState } from 'react';\nimport styles from './App.module.css';\nimport AppHeader from '../AppHeader/AppHeader';\nimport Constructor from '../Constructor/Constructor';\nimport { HomePage } from '../../pages/HomePage/HomePage';\nimport { SettingsPage } from '../../pages/SettingsPage/SettingsPage';\nimport { StorePage } from '../../pages/StorePage/StorePage';\nimport { StatPage } from '../../pages/StatPage/StatPage';\n\nimport { DEFAULT_PATH, SETTINGS_PATH, STORE_PATH, STAT_PATH } from '../../utils/routePath';\nimport { Route, Routes, useLocation, useMatch, useNavigate } from 'react-router-dom';\nconst App = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [loading, isLoading] = useState<boolean>(Boolean);\n  const background = location.state && location.state.background;\n\n  return (\n    <>\n      <AppHeader />\n      <Routes location={background || location}>\n        <Route path={DEFAULT_PATH} element={<HomePage />} />\n        <Route path={SETTINGS_PATH} element={<SettingsPage />} />\n        <Route path={STAT_PATH} element={<StatPage />} />\n        <Route path={STORE_PATH} element={<StorePage />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;","/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/Constructor/Constructor.tsx",["77"],[],"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/ConstructorItem/ConstructorItem.tsx",["78"],[],"import React, { FC, useEffect, useState } from 'react';\nimport styles from './ConstructorItem.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle, faUnlock, faCancel, faCheck, faStop, faPause } from '@fortawesome/free-solid-svg-icons';\n\ntype Props = {\n    item: {\n        _id: number,\n        name: string,\n        status: string,\n        details?: {\n            price: number,\n            time: {\n                from: {\n                    hours: number,\n                    minutes: number\n                },\n                until: {\n                    hours: number,\n                    minutes: number\n                }\n            },\n            reason: string\n        }\n    },\n    index: number\n};\n\nconst ConstructorItem: FC<Props> = ({ item, index }) => {\n    const [isEditing, setIsEditing] = useState<boolean>(false);\n    const [hours, setHours] = useState<string>('');\n    const [minutes, setMinutes] = useState<string>('');\n    const [money, setMoney] = useState<string>('');\n    const [, setIsSettings] = useState<boolean>(false);\n    const [, setIsPausing] = useState<boolean>(false);\n    const [, setIsAccepteed] = useState<boolean>(false);\n\n    const handleSettingsClick = () => {\n        setIsSettings(false);\n    }\n    const handleCancelClick = () => {\n        setIsEditing(false);\n    }\n    const handlePlayClick = () => {\n        setIsEditing(true);\n        console.log('play');\n    }\n    const handleAcceptClick = (index: any) => {\n        setIsAccepteed(true);\n\n        let data = {\n            \"id\": index,\n            \"price\": money,\n            \"time\": {\n                hours,\n                minutes\n            }\n        }\n\n        console.log(data);\n    }\n\n    const handlePauseClick = () => {\n        setIsPausing(true);\n    }\n\n    if (isEditing) {\n        return (\n            <article className={`${styles.card} ${styles.articleOnline}`}>\n\n                <div className={styles.cardHeader}>\n                    <span className={styles.headerStatementBox}>Бронирование</span>\n                    <span className={styles.headerIndexBox}>{index}</span>\n                </div>\n\n                <div className={styles.cardBody}>\n                    <div className={`${styles.flex} ${styles.flexColumn} ${styles.w100}`}>\n                        <div className={`${styles.flex} ${styles.flexRow} ${styles.flexCenter} ${styles.m1}`}>\n                            <input className={`${styles.editingInput} ${styles.w50} ${styles.mr1}`} type=\"text\" value={hours} onChange={(event) => setHours(event.target.value)} placeholder='Час' />\n                            <input className={`${styles.editingInput} ${styles.w50}`} type=\"text\" value={minutes} onChange={(event) => setMinutes(event.target.value)} placeholder='Минута' />\n                        </div>\n\n                        <div className={`${styles.flex} ${styles.flexRow} ${styles.flexCenter} ${styles.m1}`}>\n                            <input className={`${styles.editingInput} ${styles.mr1}`} type=\"text\" value={money} onChange={(event) => setMoney(event.target.value)} placeholder='Деньги' maxLength={6} />\n                            руб.\n                        </div>\n                    </div>\n                </div>\n\n                <div className={`${styles.cardFooter} ${styles.flex} ${styles.flexRow} ${styles.flexCenter}`}>\n                    <button className={`${styles.button} ${styles.mr1}`} onClick={() => handleAcceptClick(index)}>\n                        <FontAwesomeIcon icon={faCheck} />\n                        Принять\n                    </button>\n\n                    <button className={`${styles.button}`} onClick={handleCancelClick}>\n                        <FontAwesomeIcon icon={faCancel} />\n                        Отменить\n                    </button>\n                </div>\n\n            </article>\n        )\n    }\n\n    const computerStatement = (item: any) => {\n        switch (item.status) {\n            case \"offline\":\n                return (\n                    <article className={`${styles.card} ${styles.articleOffline}`}>\n\n                        <div className={styles.cardHeader}>\n                            <span className={styles.headerStatementBox}>Выключен</span>\n                            <span className={styles.headerIndexBox}>{index}</span>\n                        </div>\n\n                        <div className={styles.cardBody}>\n                            {/* Empty */}\n                        </div>\n\n                        <div className={`${styles.cardFooter} ${styles.flex} ${styles.flexRow} ${styles.flexCenter}`}>\n\n                        </div>\n                    </article>\n                )\n            case \"techWorks\":\n                return (\n                    <article className={`${styles.card} ${styles.articleTech}`}>\n\n                        <div className={styles.cardHeader}>\n                            <span className={styles.headerStatementBox}>Тех. неполадки</span>\n                            <span className={styles.headerIndexBox}>{index}</span>\n                        </div>\n\n                        <div className={styles.cardBody}>\n                            {/* Empty */}\n                            <p>{item.details.reason}</p>\n                        </div>\n\n                        <div className={`${styles.cardFooter} ${styles.flex} ${styles.flexRow} ${styles.flexCenter}`}>\n                            <button className={styles.button} onClick={handleSettingsClick}>\n                                <FontAwesomeIcon icon={faStop} />\n                                Возобновить работу\n                            </button>\n                        </div>\n                    </article>\n                )\n            case \"online\":\n                return (\n                    <article className={`${styles.card} ${styles.articleOnline}`}>\n\n                        <div className={styles.cardHeader}>\n                            <span className={styles.headerStatementBox}>Свободен</span>\n                            <span className={styles.headerIndexBox}>{index}</span>\n                        </div>\n\n                        <div className={styles.cardBody}>\n                            {/* Empty */}\n                        </div>\n\n\n                        <div className={`${styles.cardFooter} ${styles.flex} ${styles.flexRow} ${styles.flexCenter}`}>\n                            <button className={styles.button} onClick={handlePlayClick}>\n                                <FontAwesomeIcon icon={faPlayCircle} />\n                                Играть\n                            </button>\n                        </div>\n\n                    </article>\n                )\n            case \"playing\":\n                return (\n                    <article className={`${styles.card} ${styles.articleBooking}`}>\n\n                        <div className={styles.cardHeader}>\n                            <span className={styles.headerStatementBox}>Занят</span>\n                            <span className={styles.headerIndexBox}>{index}</span>\n                        </div>\n\n                        <div className={styles.cardBody}>\n\n                            <div>\n                                <p>\n                                    Оплачено: <span className={styles.textBold}>{item.details?.price} руб.</span>\n                                </p>\n\n                                <p>\n                                    Начало <span className={styles.textBold}>{item.details?.time.from.hours}:{item.details?.time.from.minutes}</span>\n                                </p>\n\n                                <p>\n                                    Конец <span className={styles.textBold}>{item.details?.time.until.hours}:{item.details?.time.until.minutes}</span>\n                                </p>\n                            </div>\n\n                        </div>\n\n                        <div className={`${styles.cardFooter} ${styles.flex} ${styles.flexRow} ${styles.flexCenter}`}>\n                            <button className={`${styles.button}`} onClick={handlePauseClick}>\n                                <FontAwesomeIcon icon={faPause} />\n                                Пауза\n                            </button>\n\n                            <button className={`${styles.button}`} onClick={handleAcceptClick}>\n                                <FontAwesomeIcon icon={faUnlock} />\n                                Завершить\n                            </button>\n                        </div>\n\n                    </article>\n                )\n            default:\n                break;\n        }\n    }\n\n    return (\n        <>\n            {computerStatement(item)}\n        </>\n    )\n}\n\nexport default ConstructorItem;","/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/AppHeader/AppHeader.tsx",[],[],"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/pages/HomePage/HomePage.tsx",[],[],"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/pages/SettingsPage/SettingsPage.tsx",[],[],"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/utils/routePath.ts",[],[],"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/ConstructorPlayStation/ConstructorPlayStation.tsx",["79","80","81","82"],[],"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/utils/api.ts",["83","84"],[],"import data from './ping.json'\n\n\nconst ApiUrlPath = 'https://localhost:3001';\n// const ApiUrlPath = 'https://norma.nomoreparties.space/api';\n\nconst request = (endpoint: string, options: RequestInit) => {\n    const url = `${ApiUrlPath}${endpoint}`;\n    return fetch(url, options).then(checkResponse);\n}\nconst checkResponse = (res: Response) => {\n    return res.ok ? res.json() : res.json().then((err) => Promise.reject(err));\n};\nexport const fetchComputersData = () => {\n    const endpoint = '/ingredients';\n    // return request(endpoint, {})\n    //     .then((res) => {\n    //         if (res.success) return res.data;\n    //         return Promise.reject(res);\n    //     });\n\n    // mock data\n    return data;\n}","/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/pages/StorePage/StorePage.tsx",[],[],"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/pages/StatPage/StatPage.tsx",["85","86","87","88"],[],"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/Store/Store.tsx",[],[],{"ruleId":"89","severity":1,"message":"90","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":14},{"ruleId":"89","severity":1,"message":"93","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":19},{"ruleId":"89","severity":1,"message":"94","line":11,"column":38,"nodeType":"91","messageId":"92","endLine":11,"endColumn":46},{"ruleId":"89","severity":1,"message":"95","line":14,"column":9,"nodeType":"91","messageId":"92","endLine":14,"endColumn":17},{"ruleId":"89","severity":1,"message":"96","line":15,"column":10,"nodeType":"91","messageId":"92","endLine":15,"endColumn":17},{"ruleId":"89","severity":1,"message":"97","line":15,"column":19,"nodeType":"91","messageId":"92","endLine":15,"endColumn":28},{"ruleId":"89","severity":1,"message":"98","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":30},{"ruleId":"89","severity":1,"message":"99","line":1,"column":21,"nodeType":"91","messageId":"92","endLine":1,"endColumn":30},{"ruleId":"89","severity":1,"message":"99","line":1,"column":21,"nodeType":"91","messageId":"92","endLine":1,"endColumn":30},{"ruleId":"89","severity":1,"message":"100","line":1,"column":32,"nodeType":"91","messageId":"92","endLine":1,"endColumn":40},{"ruleId":"89","severity":1,"message":"101","line":4,"column":24,"nodeType":"91","messageId":"92","endLine":4,"endColumn":30},{"ruleId":"89","severity":1,"message":"102","line":4,"column":32,"nodeType":"91","messageId":"92","endLine":4,"endColumn":40},{"ruleId":"89","severity":1,"message":"103","line":7,"column":7,"nodeType":"91","messageId":"92","endLine":7,"endColumn":14},{"ruleId":"89","severity":1,"message":"104","line":15,"column":11,"nodeType":"91","messageId":"92","endLine":15,"endColumn":19},{"ruleId":"89","severity":1,"message":"99","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":19},{"ruleId":"89","severity":1,"message":"100","line":2,"column":21,"nodeType":"91","messageId":"92","endLine":2,"endColumn":29},{"ruleId":"89","severity":1,"message":"105","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":14},{"ruleId":"89","severity":1,"message":"106","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":12},"@typescript-eslint/no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'Constructor' is defined but never used.","'useMatch' is defined but never used.","'navigate' is assigned a value but never used.","'loading' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'ConstructorPlayStation' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'faLock' is defined but never used.","'faUnlock' is defined but never used.","'request' is assigned a value but never used.","'endpoint' is assigned a value but never used.","'Line' is defined but never used.","'data' is defined but never used."]