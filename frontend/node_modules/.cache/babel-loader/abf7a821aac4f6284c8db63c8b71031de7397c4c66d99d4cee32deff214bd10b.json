{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/Constructor/Constructor.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './Constructor.module.css';\nimport { useAppSelector } from '../../services/hooks/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Square = ({\n  id,\n  position,\n  onDragStart,\n  onDragOver,\n  onDrop\n}) => {\n  const style = {\n    left: `${position.x}px`,\n    top: `${position.y}px`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.square,\n    draggable: true,\n    onDragStart: e => onDragStart(e, id),\n    onDragOver: e => onDragOver(e),\n    onDrop: e => onDrop(e, id),\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_c = Square;\nconst Grid = () => {\n  _s();\n  // const gridSize = 100;\n  // const [squares, setSquares] = useState<{ id: number; position: { x: number; y: number } }[]>([]);\n\n  // const handleDragStart = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n  //     e.dataTransfer.setData(\"text/plain\", id.toString());\n  // };\n\n  // const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n  //     e.preventDefault();\n  // };\n\n  // const handleDrop = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n  //     e.preventDefault();\n  //     const squareId = Number(e.dataTransfer.getData(\"text/plain\"));\n\n  //     const updatedSquares = squares.map((square) => {\n  //         if (square.id === squareId) {\n  //             return {\n  //                 ...square,\n  //                 position: { x: e.clientX, y: e.clientY },\n  //             };\n  //         }\n  //         return square;\n  //     });\n\n  //     setSquares(updatedSquares);\n  // };\n\n  // const renderSquares = () => {\n  //     return squares.map((square) => (\n  //         <Square\n  //             key={square.id}\n  //             id={square.id}\n  //             position={square.position}\n  //             onDragStart={handleDragStart}\n  //             onDragOver={handleDragOver}\n  //             onDrop={handleDrop}\n  //         />\n  //     ));\n  // };\n\n  // return (\n  //     <div className={styles.grid}>\n  //         {renderSquares()}\n  //     </div>\n  // );\n  const gridSize = 100;\n  const squareSize = 8;\n  const [squares, setSquares] = useState([]);\n  useEffect(() => {\n    const initialSquares = Array.from({\n      length: gridSize ** 2\n    }, (_, index) => {\n      const x = index % gridSize * squareSize;\n      const y = Math.floor(index / gridSize) * squareSize;\n      return {\n        id: index,\n        position: {\n          x,\n          y\n        }\n      };\n    });\n    setSquares(initialSquares);\n  }, []);\n  const handleDragStart = (e, id) => {\n    e.dataTransfer.setData(\"text/plain\", id.toString());\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = (e, id) => {\n    e.preventDefault();\n    const squareId = Number(e.dataTransfer.getData(\"text/plain\"));\n    const updatedSquares = squares.map(square => {\n      if (square.id === squareId) {\n        return {\n          ...square,\n          position: {\n            x: e.clientX,\n            y: e.clientY\n          }\n        };\n      }\n      return square;\n    });\n    setSquares(updatedSquares);\n  };\n  const renderSquares = () => {\n    return squares.map(square => /*#__PURE__*/_jsxDEV(Square, {\n      id: square.id,\n      position: square.position,\n      onDragStart: handleDragStart,\n      onDragOver: handleDragOver,\n      onDrop: handleDrop\n    }, square.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: renderSquares()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 10\n  }, this);\n};\n_s(Grid, \"+I8Xw6B29f1JOxAQNg7JrZQdLMo=\");\n_c2 = Grid;\nconst Constructor = () => {\n  _s2();\n  const playground = useAppSelector(store => store.playground.computers);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: styles.section,\n    children: /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n_s2(Constructor, \"VU6irv/8aa1WjALHYLDVSKc9lg0=\", false, function () {\n  return [useAppSelector];\n});\n_c3 = Constructor;\nexport default Constructor;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"Constructor\");","map":{"version":3,"names":["React","useState","styles","useAppSelector","jsxDEV","_jsxDEV","Square","id","position","onDragStart","onDragOver","onDrop","style","left","x","top","y","className","square","draggable","e","fileName","_jsxFileName","lineNumber","columnNumber","_c","Grid","_s","gridSize","squareSize","squares","setSquares","useEffect","initialSquares","Array","from","length","_","index","Math","floor","handleDragStart","dataTransfer","setData","toString","handleDragOver","preventDefault","handleDrop","squareId","Number","getData","updatedSquares","map","clientX","clientY","renderSquares","children","_c2","Constructor","_s2","playground","store","computers","section","_c3","$RefreshReg$"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/Constructor/Constructor.tsx"],"sourcesContent":["import React, { FC, useState } from 'react';\nimport styles from './Constructor.module.css';\nimport ConstructorItem from '../ConstructorItem/ConstructorItem';\nimport { useAppSelector } from '../../services/hooks/hooks';\nimport { TComputer } from '../../services/types/types';\n\ninterface SquareProps {\n    id: number;\n    position: { x: number; y: number };\n    onDragStart: Function;\n    onDragOver: Function;\n    onDrop: Function;\n}\n\nconst Square: React.FC<SquareProps> = ({\n    id,\n    position,\n    onDragStart,\n    onDragOver,\n    onDrop,\n}) => {\n    const style = {\n        left: `${position.x}px`,\n        top: `${position.y}px`,\n    };\n\n    return (\n        <div\n            className={styles.square}\n            draggable\n            onDragStart={(e) => onDragStart(e, id)}\n            onDragOver={(e) => onDragOver(e)}\n            onDrop={(e) => onDrop(e, id)}\n            style={style}\n        />\n    );\n};\n\nconst Grid: React.FC = () => {\n    // const gridSize = 100;\n    // const [squares, setSquares] = useState<{ id: number; position: { x: number; y: number } }[]>([]);\n\n    // const handleDragStart = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n    //     e.dataTransfer.setData(\"text/plain\", id.toString());\n    // };\n\n    // const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    //     e.preventDefault();\n    // };\n\n    // const handleDrop = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n    //     e.preventDefault();\n    //     const squareId = Number(e.dataTransfer.getData(\"text/plain\"));\n\n    //     const updatedSquares = squares.map((square) => {\n    //         if (square.id === squareId) {\n    //             return {\n    //                 ...square,\n    //                 position: { x: e.clientX, y: e.clientY },\n    //             };\n    //         }\n    //         return square;\n    //     });\n\n    //     setSquares(updatedSquares);\n    // };\n\n    // const renderSquares = () => {\n    //     return squares.map((square) => (\n    //         <Square\n    //             key={square.id}\n    //             id={square.id}\n    //             position={square.position}\n    //             onDragStart={handleDragStart}\n    //             onDragOver={handleDragOver}\n    //             onDrop={handleDrop}\n    //         />\n    //     ));\n    // };\n\n    // return (\n    //     <div className={styles.grid}>\n    //         {renderSquares()}\n    //     </div>\n    // );\n    const gridSize = 100;\n  const squareSize = 8;\n  const [squares, setSquares] = useState<{ id: number; position: { x: number; y: number } }[]>([]);\n\n  useEffect(() => {\n    const initialSquares = Array.from({ length: gridSize ** 2 }, (_, index) => {\n      const x = (index % gridSize) * squareSize;\n      const y = Math.floor(index / gridSize) * squareSize;\n      return { id: index, position: { x, y } };\n    });\n\n    setSquares(initialSquares);\n  }, []);\n\n  const handleDragStart = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n    e.dataTransfer.setData(\"text/plain\", id.toString());\n  };\n\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n    e.preventDefault();\n    const squareId = Number(e.dataTransfer.getData(\"text/plain\"));\n\n    const updatedSquares = squares.map((square) => {\n      if (square.id === squareId) {\n        return {\n          ...square,\n          position: { x: e.clientX, y: e.clientY },\n        };\n      }\n      return square;\n    });\n\n    setSquares(updatedSquares);\n  };\n\n  const renderSquares = () => {\n    return squares.map((square) => (\n      <Square\n        key={square.id}\n        id={square.id}\n        position={square.position}\n        onDragStart={handleDragStart}\n        onDragOver={handleDragOver}\n        onDrop={handleDrop}\n      />\n    ));\n  };\n\n  return <div className=\"grid\">{renderSquares()}</div>;\n};\n\nconst Constructor: FC = () => {\n    const playground = useAppSelector(\n        (store) => store.playground.computers\n    );\n\n    return (\n        <article className={styles.section}>\n            <Grid />\n            {/* {playground.length > 0 && playground.map((computer: TComputer, index: number) => {\n                return (\n                    <ConstructorItem computer={computer} index={index + 1} key={index} />\n                )\n            })} */}\n        </article>\n    );\n}\n\nexport default Constructor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}