{"ast":null,"code":"import { fetchStoreData } from \"../../utils/api\";\nexport const FETCH_STORE_REQUEST = \"FETCH_STORE_REQUEST\";\nexport const FETCH_STORE_SUCCESS = \"FETCH_STORE_SUCCESS\";\nexport const FETCH_STORE_FAILURE = \"FETCH_STORE_FAILURE\";\nexport const fetchStoreRequest = () => ({\n  type: FETCH_STORE_REQUEST\n});\nvar ActionTypes = /*#__PURE__*/function (ActionTypes) {\n  ActionTypes[\"FETCH_STORE_REQUEST\"] = \"FETCH_STORE_REQUEST\";\n  ActionTypes[\"FETCH_STORE_SUCCESS\"] = \"FETCH_STORE_SUCCESS\";\n  ActionTypes[\"FETCH_STORE_FAILURE\"] = \"FETCH_STORE_FAILURE\";\n  ActionTypes[\"FETCH_CONSTRUCTOR_STORE_REQUEST\"] = \"FETCH_CONSTRUCTOR_STORE_REQUEST\";\n  return ActionTypes;\n}(ActionTypes || {});\nexport const fetchStoreSuccess = data => ({\n  type: ActionTypes.FETCH_STORE_SUCCESS,\n  payload: data\n});\nexport const fetchStoreFailure = error => ({\n  type: FETCH_STORE_FAILURE,\n  payload: error\n});\nexport function getStore() {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_STORE_REQUEST\n    });\n    fetchStoreData().then(res => {\n      dispatch(fetchStoreSuccess(res.data));\n    }).catch(error => dispatch(fetchStoreFailure(error)));\n  };\n}","map":{"version":3,"names":["fetchStoreData","FETCH_STORE_REQUEST","FETCH_STORE_SUCCESS","FETCH_STORE_FAILURE","fetchStoreRequest","type","ActionTypes","fetchStoreSuccess","data","payload","fetchStoreFailure","error","getStore","dispatch","then","res","catch"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/services/actions/store.ts"],"sourcesContent":["import { fetchStoreData } from \"../../utils/api\";\nimport { useAppDispatch } from \"../hooks/hooks\";\n\nexport const FETCH_STORE_REQUEST: \"FETCH_STORE_REQUEST\" =\n    \"FETCH_STORE_REQUEST\";\nexport const FETCH_STORE_SUCCESS: \"FETCH_STORE_SUCCESS\" =\n    \"FETCH_STORE_SUCCESS\";\nexport const FETCH_STORE_FAILURE: \"FETCH_STORE_FAILURE\" =\n    \"FETCH_STORE_FAILURE\";\n\nexport type TStore =\n    | IFetchStoreRequestAction\n    | IFetchStoreSuccessAction\n    | IFetchStoreFailureAction;\n\nexport interface IFetchStoreRequestAction {\n    readonly type: typeof FETCH_STORE_REQUEST;\n}\n\nexport interface IFetchStoreSuccessAction {\n    readonly type: typeof FETCH_STORE_SUCCESS;\n    readonly payload: any;\n}\n\nexport interface IFetchStoreFailureAction {\n    readonly type: typeof FETCH_STORE_FAILURE;\n    readonly payload: string;\n}\n\nexport const fetchStoreRequest = (): IFetchStoreRequestAction => ({\n    type: FETCH_STORE_REQUEST,\n});\n\nenum ActionTypes {\n    FETCH_STORE_REQUEST = \"FETCH_STORE_REQUEST\",\n    FETCH_STORE_SUCCESS = \"FETCH_STORE_SUCCESS\",\n    FETCH_STORE_FAILURE = \"FETCH_STORE_FAILURE\",\n    FETCH_CONSTRUCTOR_STORE_REQUEST = \"FETCH_CONSTRUCTOR_STORE_REQUEST\",\n}\n\nexport const fetchStoreSuccess = (\n    data: any[]\n): IFetchStoreSuccessAction => ({\n    type: ActionTypes.FETCH_STORE_SUCCESS,\n    payload: data,\n});\n\nexport const fetchStoreFailure = (\n    error: string\n): IFetchStoreFailureAction => ({\n    type: FETCH_STORE_FAILURE,\n    payload: error,\n});\n\nexport function getStore() {\n    return function (dispatch: ReturnType<typeof useAppDispatch>) {\n        dispatch({\n            type: FETCH_STORE_REQUEST,\n        });\n\n        fetchStoreData()\n            .then((res) => {\n                dispatch(fetchStoreSuccess(res.data));\n            })\n            .catch((error) =>\n                dispatch(fetchStoreFailure(error))\n            );\n    };\n}"],"mappings":"AAAA,SAASA,cAAc,QAAQ,iBAAiB;AAGhD,OAAO,MAAMC,mBAA0C,GACnD,qBAAqB;AACzB,OAAO,MAAMC,mBAA0C,GACnD,qBAAqB;AACzB,OAAO,MAAMC,mBAA0C,GACnD,qBAAqB;AAqBzB,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,MAAiC;EAC9DC,IAAI,EAAEJ;AACV,CAAC,CAAC;AAAC,IAEEK,WAAW,0BAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA,EAAXA,WAAW;AAOhB,OAAO,MAAMC,iBAAiB,GAC1BC,IAAW,KACiB;EAC5BH,IAAI,EAAEC,WAAW,CAACJ,mBAAmB;EACrCO,OAAO,EAAED;AACb,CAAC,CAAC;AAEF,OAAO,MAAME,iBAAiB,GAC1BC,KAAa,KACe;EAC5BN,IAAI,EAAEF,mBAAmB;EACzBM,OAAO,EAAEE;AACb,CAAC,CAAC;AAEF,OAAO,SAASC,QAAQA,CAAA,EAAG;EACvB,OAAO,UAAUC,QAA2C,EAAE;IAC1DA,QAAQ,CAAC;MACLR,IAAI,EAAEJ;IACV,CAAC,CAAC;IAEFD,cAAc,CAAC,CAAC,CACXc,IAAI,CAAEC,GAAG,IAAK;MACXF,QAAQ,CAACN,iBAAiB,CAACQ,GAAG,CAACP,IAAI,CAAC,CAAC;IACzC,CAAC,CAAC,CACDQ,KAAK,CAAEL,KAAK,IACTE,QAAQ,CAACH,iBAAiB,CAACC,KAAK,CAAC,CACrC,CAAC;EACT,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}