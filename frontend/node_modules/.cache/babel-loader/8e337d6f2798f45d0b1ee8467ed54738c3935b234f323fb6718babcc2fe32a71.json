{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/pages/StorePage/StorePage.tsx\";\nimport React from 'react';\nimport styles from \"./StorePage.module.css\";\nimport { Store } from '../../components/Store/Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StorePage = () => {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Store, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = StorePage;\nvar _c;\n$RefreshReg$(_c, \"StorePage\");","map":{"version":3,"names":["React","styles","Store","jsxDEV","_jsxDEV","StorePage","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/pages/StorePage/StorePage.tsx"],"sourcesContent":["import React, { FC, useState, useEffect } from 'react';\nimport styles from \"./StorePage.module.css\";\nimport data from \"../../utils/store.json\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCreditCard, faCoins } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '../../components/Store/Store';\nexport const StorePage: FC = () => {\n    return (\n        <main className={styles.container}>\n\n            <h1>Магазин</h1>\n            <Store />\n            {/* <div className={`${styles.storeContainer} ${styles.mt4}`}>\n                <div className={styles.card}>\n                    <table className={styles.table}>\n                        <thead>\n                            <tr>\n                                <th>Название</th>\n                                <th>Стоимость</th>\n                                <th>Количество</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {data.map((item) => (\n                                <tr\n                                    key={item._id}\n                                    className={selectedItems.includes(item._id) ? styles.selectedRow : \"\"}\n                                    onClick={() => handleItemClick(item._id)}\n                                >\n                                    <td>{item.name}</td>\n                                    <td>{item.price}</td>\n                                    <td>{item.psc}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n\n                <div className={styles.cart}>\n                    <div className={styles.cartHeader}>\n                        <h2>Корзина</h2>\n                    </div>\n\n                    <div className={styles.cartBody}>\n                        {selectedItems.length > 0 ? (\n                            <ul>\n                                {selectedItems.map((itemId) => {\n                                    const item1 = data.find((item) => item._id === itemId);\n                                    return <li className={styles.listRow} key={itemId}>{item1?.name}</li>;\n                                })}\n                            </ul>\n                        ) : (\n                            <p>Корзина пуста</p>\n                        )}\n                    </div>\n\n                    <div className={styles.cartFooter}>\n\n                        <div className={`${styles.switcher}`}>\n                            <button\n                                className={`${styles.paymentButton} ${paymentType === \"card\" ? styles.activeButton : styles.nonActiveButton}`}\n                                onClick={() => handlePaymentTypeChange(\"card\")}\n                            >\n                                <FontAwesomeIcon icon={faCreditCard} /> Безналичный\n                            </button>\n                            <button\n                                className={`${styles.paymentButton} ${paymentType === \"cash\" ? styles.activeButton : styles.nonActiveButton}`}\n                                onClick={() => handlePaymentTypeChange(\"cash\")}\n                            >\n                                <FontAwesomeIcon icon={faCoins} /> Наличный\n                            </button>\n                        </div>\n\n                        <button className={`${styles.submitButton} ${styles.mt2}`} onClick={handleAddToCart} disabled={selectedItems.length === 0}>\n                            Оплатить\n                            <span>\n                                {totalPrice} руб.\n                            </span>\n                        </button>\n                    </div>\n                </div>\n            </div> */}\n        </main >\n    );\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAmC,OAAO;AACtD,OAAOC,MAAM,MAAM,wBAAwB;AAI3C,SAASC,KAAK,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrD,OAAO,MAAMC,SAAa,GAAGA,CAAA,KAAM;EAC/B,oBACID,OAAA;IAAME,SAAS,EAAEL,MAAM,CAACM,SAAU;IAAAC,QAAA,gBAE9BJ,OAAA;MAAAI,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBR,OAAA,CAACF,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAuEN,CAAC;AAEhB,CAAC;AAACC,EAAA,GA9EWR,SAAa;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}