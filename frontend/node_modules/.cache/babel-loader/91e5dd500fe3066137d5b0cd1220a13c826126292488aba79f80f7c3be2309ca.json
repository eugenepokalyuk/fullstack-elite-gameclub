{"ast":null,"code":"const ApiUrlPath = 'http://localhost:8003';\n// const ApiUrlPath = 'http://172.20.10.4';\nconst routeStore = \"/store\";\nconst routePlayground = \"/pc\";\nconst request = (endpoint, options) => {\n  const url = `${ApiUrlPath}${endpoint}`;\n  return fetch(url, options).then(checkResponse);\n};\nconst checkResponse = res => {\n  return res.ok ? res.json() : res.json().then(err => Promise.reject(err));\n};\nexport const fetchComputersData = async () => {\n  const endpoint = routePlayground + \"/ping\";\n  const options = {\n    headers: {\n      auth: 123\n    }\n  };\n  return request(endpoint, options);\n};\nexport const fetchPlay = async body => {\n  const endpoint = routePlayground + \"/play\";\n  const options = {\n    method: \"PATCH\",\n    headers: {\n      'Content-Type': 'application/json',\n      auth: 123\n    },\n    body: JSON.stringify(body)\n  };\n  return request(endpoint, options);\n};\nexport const fetchPause = async id => {\n  const endpoint = routePlayground + `/pause?id=${id}`;\n  const options = {\n    method: \"PATCH\",\n    headers: {\n      'Content-Type': 'application/json',\n      auth: 123\n    }\n  };\n  return request(endpoint, options);\n};\nexport const fetchContinue = async id => {\n  const endpoint = routePlayground + `/continue?id=${id}`;\n  const options = {\n    method: \"PATCH\",\n    headers: {\n      'Content-Type': 'application/json',\n      auth: 123\n    }\n  };\n  return request(endpoint, options);\n};\nexport const fetchFinish = async (computer, newPrice) => {\n  const endpoint = routePlayground + \"/finish\";\n  const options = {\n    method: \"PATCH\",\n    headers: {\n      'Content-Type': 'application/json',\n      auth: 123\n    },\n    body: newPrice ? JSON.stringify({\n      id: computer.id,\n      price: newPrice\n    }) : JSON.stringify({\n      id: computer.id\n    })\n  };\n  return request(endpoint, options);\n};\n// fetchStoreData\nexport const fetchStoreData = async () => {\n  const endpoint = routeStore + \"/items\";\n  const options = {\n    headers: {\n      auth: 123\n    }\n  };\n  return request(endpoint, options);\n};\nexport const fetchStoreSell = async selectedItems => {\n  const endpoint = routeStore + \"/item/sell\";\n  const options = {\n    method: \"PATCH\",\n    headers: {\n      'Content-Type': 'application/json',\n      auth: 123\n    },\n    body: JSON.stringify(selectedItems)\n  };\n  return request(endpoint, options);\n};\nexport const fetchWarehouseAddItem = async (name, price) => {\n  const endpoint = routeStore + \"/item/add\";\n  const options = {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      auth: 123\n    },\n    body: JSON.stringify({\n      name: name,\n      price: price\n    })\n  };\n  return request(endpoint, options);\n};\nexport const fetchWarehouseAddSupply = async selectedItems => {\n  const endpoint = routeStore + \"/supply\";\n  const options = {\n    method: \"PUT\",\n    headers: {\n      'Content-Type': 'application/json',\n      auth: 123\n    },\n    body: JSON.stringify({\n      items: selectedItems\n    })\n  };\n  return request(endpoint, options);\n};\nexport const fetchWarehouseItem = async id => {\n  const endpoint = routeStore + `/info?id=${id}`;\n  const options = {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json',\n      auth: 123\n    }\n  };\n  return request(endpoint, options);\n};\nexport const fetchWarehouseEditItemName = async (id, name) => {\n  const endpoint = routeStore + `/item/edit/name`;\n  const options = {\n    method: \"PATCH\",\n    headers: {\n      'Content-Type': 'application/json',\n      auth: 123\n    },\n    body: JSON.stringify({\n      id: id,\n      name: name\n    })\n  };\n  return request(endpoint, options);\n};\nexport const fetchWarehouseEditItemPrice = async (id, price) => {\n  const endpoint = routeStore + `/item/edit/price`;\n  const options = {\n    method: \"PATCH\",\n    headers: {\n      'Content-Type': 'application/json',\n      auth: 123\n    },\n    body: JSON.stringify({\n      id: id,\n      price: price\n    })\n  };\n  return request(endpoint, options);\n};\nexport const fetchWarehouseHideItem = async id => {\n  const endpoint = routeStore + `/item/hide?id=${id}`;\n  const options = {\n    method: \"PATCH\",\n    headers: {\n      'Content-Type': 'application/json',\n      auth: 123\n    },\n    body: JSON.stringify({\n      id: id\n    })\n  };\n  return request(endpoint, options);\n};\nexport const fetchWarehouseShowItem = async id => {\n  const endpoint = routeStore + `/item/show?id=${id}`;\n  const options = {\n    method: \"PATCH\",\n    headers: {\n      'Content-Type': 'application/json',\n      auth: 123\n    }\n  };\n  return request(endpoint, options);\n};","map":{"version":3,"names":["ApiUrlPath","routeStore","routePlayground","request","endpoint","options","url","fetch","then","checkResponse","res","ok","json","err","Promise","reject","fetchComputersData","headers","auth","fetchPlay","body","method","JSON","stringify","fetchPause","id","fetchContinue","fetchFinish","computer","newPrice","price","fetchStoreData","fetchStoreSell","selectedItems","fetchWarehouseAddItem","name","fetchWarehouseAddSupply","items","fetchWarehouseItem","fetchWarehouseEditItemName","fetchWarehouseEditItemPrice","fetchWarehouseHideItem","fetchWarehouseShowItem"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/utils/api.ts"],"sourcesContent":["import { TComputer, TPlayBody } from \"../services/types/types\";\n\nconst ApiUrlPath = 'http://localhost:8003';\n// const ApiUrlPath = 'http://172.20.10.4';\nconst routeStore = \"/store\";\nconst routePlayground = \"/pc\";\n\nconst request = (endpoint: string, options: any) => {\n    const url = `${ApiUrlPath}${endpoint}`;\n    return fetch(url, options).then(checkResponse);\n};\n\nconst checkResponse = (res: Response) => {\n    return res.ok\n        ? res.json()\n        : res.json().then((err) => Promise.reject(err));\n};\nexport const fetchComputersData = async () => {\n    const endpoint = routePlayground + \"/ping\";\n    const options = {\n        headers: {\n            auth: 123\n        },\n    }\n    return request(endpoint, options);\n}\nexport const fetchPlay = async (body: TPlayBody) => {\n    const endpoint = routePlayground + \"/play\";\n    const options = {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            auth: 123\n        },\n        body: JSON.stringify(body)\n    }\n    return request(endpoint, options);\n}\nexport const fetchPause = async (id: number) => {\n    const endpoint = routePlayground + `/pause?id=${id}`;\n    const options = {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            auth: 123\n        },\n    }\n    return request(endpoint, options);\n}\nexport const fetchContinue = async (id: number) => {\n    const endpoint = routePlayground + `/continue?id=${id}`;\n    const options = {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            auth: 123\n        },\n    }\n    return request(endpoint, options);\n}\nexport const fetchFinish = async (computer: TComputer, newPrice: number | undefined) => {\n    const endpoint = routePlayground + \"/finish\";\n    const options = {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            auth: 123\n        },\n        body: newPrice ? JSON.stringify({\n            id: computer.id,\n            price: (newPrice)\n        }) : JSON.stringify({\n            id: computer.id,\n        })\n    }\n    return request(endpoint, options);\n}\n// fetchStoreData\nexport const fetchStoreData = async () => {\n    const endpoint = routeStore + \"/items\";\n    const options = {\n        headers: {\n            auth: 123\n        },\n    }\n    return request(endpoint, options);\n}\nexport const fetchStoreSell = async (selectedItems: any) => {\n    const endpoint = routeStore + \"/item/sell\";\n    const options = {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            auth: 123\n        },\n        body: JSON.stringify(selectedItems)\n    }\n    return request(endpoint, options);\n}\nexport const fetchWarehouseAddItem = async (name: string, price: number | undefined) => {\n    const endpoint = routeStore + \"/item/add\";\n    const options = {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            auth: 123\n        },\n        body: JSON.stringify({\n            name: name,\n            price: price\n        })\n    }\n    return request(endpoint, options);\n}\nexport const fetchWarehouseAddSupply = async (selectedItems: any) => {\n    const endpoint = routeStore + \"/supply\";\n    const options = {\n        method: \"PUT\",\n        headers: {\n            'Content-Type': 'application/json',\n            auth: 123\n        },\n        body: JSON.stringify({ items: selectedItems })\n    }\n    return request(endpoint, options);\n}\nexport const fetchWarehouseItem = async (id: any) => {\n    const endpoint = routeStore + `/info?id=${id}`;\n    const options = {\n        method: \"GET\",\n        headers: {\n            'Content-Type': 'application/json',\n            auth: 123\n        },\n    }\n    return request(endpoint, options);\n}\nexport const fetchWarehouseEditItemName = async (id: number | undefined, name: string) => {\n    const endpoint = routeStore + `/item/edit/name`;\n    const options = {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            auth: 123\n        },\n        body: JSON.stringify({\n            id: id,\n            name: name\n        })\n    }\n    return request(endpoint, options);\n}\nexport const fetchWarehouseEditItemPrice = async (id: number | undefined, price: number) => {\n    const endpoint = routeStore + `/item/edit/price`;\n    const options = {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            auth: 123\n        },\n        body: JSON.stringify({\n            id: id,\n            price: price\n        })\n    }\n    return request(endpoint, options);\n}\nexport const fetchWarehouseHideItem = async (id: number | undefined) => {\n    const endpoint = routeStore + `/item/hide?id=${id}`;\n    const options = {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            auth: 123\n        },\n        body: JSON.stringify({\n            id: id\n        })\n    }\n    return request(endpoint, options);\n}\nexport const fetchWarehouseShowItem = async (id: number | undefined) => {\n    const endpoint = routeStore + `/item/show?id=${id}`;\n    const options = {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            auth: 123\n        },\n    }\n    return request(endpoint, options);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}