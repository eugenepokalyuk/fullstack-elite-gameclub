{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/Constructor/Constructor.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './Constructor.module.css';\nimport { useAppSelector } from '../../services/hooks/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const Square: React.FC<SquareProps> = ({\n//     id,\n//     position,\n//     onDragStart,\n//     onDragOver,\n//     onDrop,\n// }) => {\n//     const style = {\n//         left: `${position.x}px`,\n//         top: `${position.y}px`,\n//     };\n\n//     return (\n//         <div\n//             className={styles.square}\n//             draggable\n//             onDragStart={(e) => onDragStart(e, id)}\n//             onDragOver={(e) => onDragOver(e)}\n//             onDrop={(e) => onDrop(e, id)}\n//             style={style}\n//         />\n//     );\n// };\nconst Square = ({\n  id,\n  position,\n  onDragStart,\n  onDragOver,\n  onDrop,\n  occupied\n}) => {\n  const style = {\n    left: `${position.x}px`,\n    top: `${position.y}px`\n  };\n\n  // const squareClasses = `${occupied} ? ${styles.square} ${styles.occupied} : ${styles.square}`; // применяем класс styles.occupied в зависимости от занятости\n  const squareClasses = occupied ? styles.square : styles.squareOccupied; // применяем класс styles.occupied в зависимости от занятости\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: squareClasses,\n    draggable: true,\n    onDragStart: e => onDragStart(e, id),\n    onDragOver: e => onDragOver(e),\n    onDrop: e => onDrop(e, id),\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_c = Square;\nconst Grid = ({\n  playground\n}) => {\n  _s();\n  const gridSize = 200;\n  const squareSize = 18;\n  const [squares, setSquares] = useState([]);\n  useEffect(() => {\n    const initialSquares = Array.from({\n      length: gridSize\n    }, (_, index) => {\n      const x = index % gridSize * squareSize;\n      const y = Math.floor(index / gridSize) * squareSize;\n      return {\n        id: index,\n        position: {\n          x,\n          y\n        }\n      };\n    });\n    setSquares(initialSquares);\n  }, []);\n  const handleDragStart = (e, id) => {\n    console.log(\"handleDragStart\", {\n      e,\n      id\n    });\n    e.dataTransfer.setData(\"text/plain\", id.toString());\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    console.log(\"handleDragOver\", {\n      e\n    });\n  };\n  const handleDrop = (e, id) => {\n    e.preventDefault();\n    const squareId = Number(e.dataTransfer.getData(\"text/plain\"));\n    const updatedSquares = squares.map(square => {\n      if (square.id === squareId) {\n        return {\n          ...square,\n          position: {\n            x: e.clientX,\n            y: e.clientY\n          }\n        };\n      }\n      return square;\n    });\n    console.log(\"handleDrop\", {\n      e,\n      id\n    });\n    setSquares(updatedSquares);\n  };\n\n  // const renderSquares = () => {\n  //     return squares.map((square) => (\n  //         <Square\n  //             key={square.id}\n  //             id={square.id}\n  //             position={square.position}\n  //             onDragStart={handleDragStart}\n  //             onDragOver={handleDragOver}\n  //             onDrop={handleDrop}\n  //         />\n  //     ));\n  // };\n  const renderSquares = () => {\n    return squares.map(square => {\n      const {\n        id,\n        position\n      } = square;\n      const computer = playground.find(item => item.id === id);\n      // console.log(computer)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Square, {\n          id: id,\n          position: position,\n          onDragStart: handleDragStart,\n          onDragOver: handleDragOver,\n          onDrop: handleDrop,\n          occupied: true,\n          computer: computer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, square.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.grid,\n    children: renderSquares()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 12\n  }, this);\n};\n_s(Grid, \"+I8Xw6B29f1JOxAQNg7JrZQdLMo=\");\n_c2 = Grid;\nconst Constructor = () => {\n  _s2();\n  const playground = useAppSelector(store => store.playground.computers);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: styles.section,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      playground: playground\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n_s2(Constructor, \"VU6irv/8aa1WjALHYLDVSKc9lg0=\", false, function () {\n  return [useAppSelector];\n});\n_c3 = Constructor;\nexport default Constructor;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"Constructor\");","map":{"version":3,"names":["React","useEffect","useState","styles","useAppSelector","jsxDEV","_jsxDEV","Square","id","position","onDragStart","onDragOver","onDrop","occupied","style","left","x","top","y","squareClasses","square","squareOccupied","className","draggable","e","fileName","_jsxFileName","lineNumber","columnNumber","_c","Grid","playground","_s","gridSize","squareSize","squares","setSquares","initialSquares","Array","from","length","_","index","Math","floor","handleDragStart","console","log","dataTransfer","setData","toString","handleDragOver","preventDefault","handleDrop","squareId","Number","getData","updatedSquares","map","clientX","clientY","renderSquares","computer","find","item","children","grid","_c2","Constructor","_s2","store","computers","section","_c3","$RefreshReg$"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/Constructor/Constructor.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport styles from './Constructor.module.css';\nimport ConstructorItem from '../ConstructorItem/ConstructorItem';\nimport { useAppSelector } from '../../services/hooks/hooks';\nimport { TComputer } from '../../services/types/types';\n\ninterface SquareProps {\n    id: number;\n    position: { x: number; y: number };\n    onDragStart: Function;\n    onDragOver: Function;\n    onDrop: Function;\n    occupied: boolean;\n    computer: TComputer | undefined;\n}\n\n// const Square: React.FC<SquareProps> = ({\n//     id,\n//     position,\n//     onDragStart,\n//     onDragOver,\n//     onDrop,\n// }) => {\n//     const style = {\n//         left: `${position.x}px`,\n//         top: `${position.y}px`,\n//     };\n\n//     return (\n//         <div\n//             className={styles.square}\n//             draggable\n//             onDragStart={(e) => onDragStart(e, id)}\n//             onDragOver={(e) => onDragOver(e)}\n//             onDrop={(e) => onDrop(e, id)}\n//             style={style}\n//         />\n//     );\n// };\nconst Square: React.FC<SquareProps> = ({\n    id,\n    position,\n    onDragStart,\n    onDragOver,\n    onDrop,\n    occupied,\n}) => {\n    const style = {\n        left: `${position.x}px`,\n        top: `${position.y}px`,\n    };\n\n    // const squareClasses = `${occupied} ? ${styles.square} ${styles.occupied} : ${styles.square}`; // применяем класс styles.occupied в зависимости от занятости\n    const squareClasses = occupied ? styles.square : styles.squareOccupied; // применяем класс styles.occupied в зависимости от занятости\n\n    return (\n        <div\n            className={squareClasses}\n            draggable\n            onDragStart={(e) => onDragStart(e, id)}\n            onDragOver={(e) => onDragOver(e)}\n            onDrop={(e) => onDrop(e, id)}\n            style={style}\n        />\n    );\n};\n\n\nconst Grid: FC<{ playground: TComputer[] }> = ({ playground }) => {\n    const gridSize = 200;\n    const squareSize = 18;\n    const [squares, setSquares] = useState<{ id: number; position: { x: number; y: number } }[]>([]);\n\n    useEffect(() => {\n        const initialSquares = Array.from({ length: gridSize }, (_, index) => {\n            const x = (index % gridSize) * squareSize;\n            const y = Math.floor(index / gridSize) * squareSize;\n            return { id: index, position: { x, y } };\n        });\n\n        setSquares(initialSquares);\n    }, []);\n\n    const handleDragStart = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n        console.log(\"handleDragStart\", {\n            e, id\n        });\n\n        e.dataTransfer.setData(\"text/plain\", id.toString());\n    };\n\n    const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n\n        console.log(\"handleDragOver\", {\n            e\n        });\n    };\n\n    const handleDrop = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n        e.preventDefault();\n        const squareId = Number(e.dataTransfer.getData(\"text/plain\"));\n\n        const updatedSquares = squares.map((square) => {\n            if (square.id === squareId) {\n                return {\n                    ...square,\n                    position: { x: e.clientX, y: e.clientY },\n                };\n            }\n            return square;\n        });\n\n        console.log(\"handleDrop\", {\n            e, id\n        });\n\n        setSquares(updatedSquares);\n    };\n\n    // const renderSquares = () => {\n    //     return squares.map((square) => (\n    //         <Square\n    //             key={square.id}\n    //             id={square.id}\n    //             position={square.position}\n    //             onDragStart={handleDragStart}\n    //             onDragOver={handleDragOver}\n    //             onDrop={handleDrop}\n    //         />\n    //     ));\n    // };\n    const renderSquares = () => {\n        return squares.map((square) => {\n            const { id, position } = square;\n            const computer = playground.find((item) => item.id === id);\n            // console.log(computer)\n            return (\n                <div key={square.id}>\n                    <Square\n                        id={id}\n                        position={position}\n                        onDragStart={handleDragStart}\n                        onDragOver={handleDragOver}\n                        onDrop={handleDrop}\n                        occupied={true}\n                        computer={computer}\n                    />\n                    {/* {item && (\n                        <ConstructorItem\n                            key={item.id}\n                            index={item.id}\n                            position={position}\n                            computer={playground[0]} />\n                    )} */}\n                </div>\n            );\n        });\n    };\n\n    return <div className={styles.grid}>{renderSquares()}</div>;\n};\n\nconst Constructor: FC = () => {\n    const playground = useAppSelector(\n        (store) => store.playground.computers\n    );\n\n    return (\n        <article className={styles.section}>\n            <Grid playground={playground} />\n            {/* {playground.length > 0 && playground.map((computer: TComputer, index: number) => {\n                return (\n                    <ConstructorItem computer={computer} index={index + 1} key={index} />\n                )\n            })} */}\n        </article>\n    );\n}\n\nexport default Constructor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}