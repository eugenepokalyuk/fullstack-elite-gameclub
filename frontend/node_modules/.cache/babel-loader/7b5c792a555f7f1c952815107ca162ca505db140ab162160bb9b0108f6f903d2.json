{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/PlaygroundGrid/PlaygroundGrid.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './PlaygroundGrid.module.css';\nimport PlaygroundSquare from '../PlaygroundSquare/PlaygroundSquare';\nimport { fetchComputerGridReplace, fetchComputersData } from '../../utils/api';\nimport { useAppDispatch, useAppSelector } from '../../services/hooks/hooks';\nimport { FETCH_COMPUTERS_FAILURE, FETCH_COMPUTERS_REQUEST, FETCH_COMPUTERS_SUCCESS } from '../../services/actions/computers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaygroundGrid = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const playground = useAppSelector(store => store.playground.computers);\n  const gridSize = 200;\n  const [squares, setSquares] = useState([]);\n  const [dragStart, setDragStart] = useState();\n  const [newPlayground, setNewPlayground] = useState();\n  useEffect(() => {\n    // const initialSquares = Array.from({ length: gridSize }, (_, index) => {\n    //     return { id: index };\n    // });\n    // setSquares(initialSquares);\n    dispatch({\n      type: FETCH_COMPUTERS_REQUEST\n    });\n    fetchComputersData().then(res => {\n      dispatch({\n        type: FETCH_COMPUTERS_SUCCESS,\n        payload: res\n      });\n    }).catch(error => {\n      dispatch({\n        type: FETCH_COMPUTERS_FAILURE,\n        payload: error\n      });\n    });\n  }, []);\n  const handleDragStart = (e, id) => {\n    setDragStart(id);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = (e, id) => {\n    e.preventDefault();\n    fetchComputerGridReplace(dragStart, id);\n    dispatch({\n      type: FETCH_COMPUTERS_REQUEST\n    });\n    fetchComputersData().then(res => {\n      dispatch({\n        type: FETCH_COMPUTERS_SUCCESS,\n        payload: res\n      });\n    }).catch(error => {\n      dispatch({\n        type: FETCH_COMPUTERS_FAILURE,\n        payload: error\n      });\n    });\n  };\n  const renderSquares = () => {\n    return squares.map(square => {\n      return /*#__PURE__*/_jsxDEV(PlaygroundSquare, {\n        id: square.id,\n        onDragStart: handleDragStart,\n        onDragOver: handleDragOver,\n        onDrop: handleDrop,\n        playground: playground\n      }, square.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: styles.article,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.grid,\n      children: renderSquares()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(PlaygroundGrid, \"YBHtXqBo0tfh4LPQpmgj+oL5l2g=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = PlaygroundGrid;\nexport default PlaygroundGrid;\nvar _c;\n$RefreshReg$(_c, \"PlaygroundGrid\");","map":{"version":3,"names":["React","useEffect","useState","styles","PlaygroundSquare","fetchComputerGridReplace","fetchComputersData","useAppDispatch","useAppSelector","FETCH_COMPUTERS_FAILURE","FETCH_COMPUTERS_REQUEST","FETCH_COMPUTERS_SUCCESS","jsxDEV","_jsxDEV","PlaygroundGrid","_s","dispatch","playground","store","computers","gridSize","squares","setSquares","dragStart","setDragStart","newPlayground","setNewPlayground","type","then","res","payload","catch","error","handleDragStart","e","id","handleDragOver","preventDefault","handleDrop","renderSquares","map","square","onDragStart","onDragOver","onDrop","fileName","_jsxFileName","lineNumber","columnNumber","className","article","children","grid","_c","$RefreshReg$"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/PlaygroundGrid/PlaygroundGrid.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport styles from './PlaygroundGrid.module.css';\nimport { TComputer } from '../../services/types/types';\nimport PlaygroundSquare from '../PlaygroundSquare/PlaygroundSquare';\nimport { fetchComputerGridReplace, fetchComputersData } from '../../utils/api';\nimport { useAppDispatch, useAppSelector } from '../../services/hooks/hooks';\nimport { FETCH_COMPUTERS_FAILURE, FETCH_COMPUTERS_REQUEST, FETCH_COMPUTERS_SUCCESS } from '../../services/actions/computers';\n\nconst PlaygroundGrid: FC = () => {\n    const dispatch = useAppDispatch();\n\n    const playground = useAppSelector(\n        (store) => store.playground.computers\n    );\n\n    const gridSize = 200;\n    const [squares, setSquares] = useState<{ id: number }[]>([]);\n    const [dragStart, setDragStart] = useState<number>();\n    const [newPlayground, setNewPlayground] = useState<TComputer[]>();\n\n    useEffect(() => {\n        // const initialSquares = Array.from({ length: gridSize }, (_, index) => {\n        //     return { id: index };\n        // });\n        // setSquares(initialSquares);\n        dispatch({ type: FETCH_COMPUTERS_REQUEST });\n        fetchComputersData()\n            .then(res => {\n                dispatch({ type: FETCH_COMPUTERS_SUCCESS, payload: res });\n            })\n            .catch(error => {\n                dispatch({ type: FETCH_COMPUTERS_FAILURE, payload: error });\n            });\n    }, []);\n\n    const handleDragStart = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n        setDragStart(id);\n    };\n\n    const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n    };\n\n    const handleDrop = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n        e.preventDefault();\n\n        fetchComputerGridReplace(dragStart, id);\n\n        dispatch({ type: FETCH_COMPUTERS_REQUEST });\n        fetchComputersData()\n            .then(res => {\n                dispatch({ type: FETCH_COMPUTERS_SUCCESS, payload: res });\n            })\n            .catch(error => {\n                dispatch({ type: FETCH_COMPUTERS_FAILURE, payload: error });\n            });\n    };\n\n    const renderSquares = () => {\n        return squares.map((square) => {\n            return (\n                <PlaygroundSquare\n                    key={square.id}\n                    id={square.id}\n                    onDragStart={handleDragStart}\n                    onDragOver={handleDragOver}\n                    onDrop={handleDrop}\n                    playground={playground}\n                />\n            );\n        });\n    };\n\n    return (\n        <article className={styles.article}>\n            <div className={styles.grid}>\n                {renderSquares()}\n            </div>\n        </article>\n    );\n}\n\nexport default PlaygroundGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}