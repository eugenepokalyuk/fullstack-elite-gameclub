{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/pages/StatPage/StatPage.tsx\",\n  _s = $RefreshSig$();\nimport styles from \"./StatPage.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport data from \"../../utils/store.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StatPage = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    // Обработка данных для графика\n    const chartLabels = data.map(item => item.name);\n    const chartPrices = data.map(item => item.price);\n    const chartPsc = data.map(item => item.psc);\n    const chartData = {\n      labels: chartLabels,\n      datasets: [{\n        label: \"Цена\",\n        data: chartPrices,\n        fill: false,\n        borderColor: \"rgb(75, 192, 192)\",\n        tension: 0.1\n      }, {\n        label: \"Количество\",\n        data: chartPsc,\n        fill: false,\n        borderColor: \"rgb(192, 75, 192)\",\n        tension: 0.1\n      }]\n    };\n    setChartData(chartData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), chartData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chartContainer,\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(StatPage, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = StatPage;\nvar _c;\n$RefreshReg$(_c, \"StatPage\");","map":{"version":3,"names":["styles","useEffect","useState","Line","data","jsxDEV","_jsxDEV","StatPage","_s","chartData","setChartData","chartLabels","map","item","name","chartPrices","price","chartPsc","psc","labels","datasets","label","fill","borderColor","tension","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","chartContainer","_c","$RefreshReg$"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/pages/StatPage/StatPage.tsx"],"sourcesContent":["import styles from \"./StatPage.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport data from \"../../utils/store.json\";\n\nexport const StatPage = () => {\n    const [chartData, setChartData] = useState<any>(null);\n\n    useEffect(() => {\n        // Обработка данных для графика\n        const chartLabels = data.map((item) => item.name);\n        const chartPrices = data.map((item) => item.price);\n        const chartPsc = data.map((item) => item.psc);\n\n        const chartData = {\n            labels: chartLabels,\n            datasets: [\n                {\n                    label: \"Цена\",\n                    data: chartPrices,\n                    fill: false,\n                    borderColor: \"rgb(75, 192, 192)\",\n                    tension: 0.1,\n                },\n                {\n                    label: \"Количество\",\n                    data: chartPsc,\n                    fill: false,\n                    borderColor: \"rgb(192, 75, 192)\",\n                    tension: 0.1,\n                },\n            ],\n        };\n\n        setChartData(chartData);\n    }, []);\n\n    return (\n        <main className={styles.container}>\n            <h1>Статистика</h1>\n            {chartData && (\n                <div className={styles.chartContainer}>\n                    <Line data={chartData} />\n                </div>\n            )}\n        </main>\n    )\n};"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,uBAAuB;AAC1C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,IAAI,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAM,IAAI,CAAC;EAErDD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,WAAW,GAAGP,IAAI,CAACQ,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC;IACjD,MAAMC,WAAW,GAAGX,IAAI,CAACQ,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACG,KAAK,CAAC;IAClD,MAAMC,QAAQ,GAAGb,IAAI,CAACQ,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACK,GAAG,CAAC;IAE7C,MAAMT,SAAS,GAAG;MACdU,MAAM,EAAER,WAAW;MACnBS,QAAQ,EAAE,CACN;QACIC,KAAK,EAAE,MAAM;QACbjB,IAAI,EAAEW,WAAW;QACjBO,IAAI,EAAE,KAAK;QACXC,WAAW,EAAE,mBAAmB;QAChCC,OAAO,EAAE;MACb,CAAC,EACD;QACIH,KAAK,EAAE,YAAY;QACnBjB,IAAI,EAAEa,QAAQ;QACdK,IAAI,EAAE,KAAK;QACXC,WAAW,EAAE,mBAAmB;QAChCC,OAAO,EAAE;MACb,CAAC;IAET,CAAC;IAEDd,YAAY,CAACD,SAAS,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIH,OAAA;IAAMmB,SAAS,EAAEzB,MAAM,CAAC0B,SAAU;IAAAC,QAAA,gBAC9BrB,OAAA;MAAAqB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBtB,SAAS,iBACNH,OAAA;MAAKmB,SAAS,EAAEzB,MAAM,CAACgC,cAAe;MAAAL,QAAA,eAClCrB,OAAA,CAACH,IAAI;QAACC,IAAI,EAAEK;MAAU;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEf,CAAC;AAACvB,EAAA,CA1CWD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}