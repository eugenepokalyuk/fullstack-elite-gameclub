{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/Constructor/Constructor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './Constructor.module.css';\nimport ConstructorItem from '../ConstructorItem/ConstructorItem';\nimport { fetchComputersData } from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Constructor = () => {\n  _s();\n  const [computersData, setComputersData] = useState([]);\n  useEffect(() => {\n    // const getComputersData = async () => {\n    //     try {\n    //         const data = await fetchComputersData();\n    //         console.log({ data })\n    //         setComputersData(data);\n    //     } catch (error) {\n    //         // Обработка ошибки\n    //     }\n    // };\n    // getComputersData();\n    fetchComputersData().then(res => {\n      console.log({\n        res\n      });\n      //   dispatch({ type: FETCH_GAMES_SUCCESS, payload: res });\n      //   setError(false)\n    }).catch(error => {\n      //   dispatch({ type: FETCH_GAMES_FAILURE });\n      //   setError(true)\n    }).finally(() => {\n      //   setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: styles.section,\n    children: computersData.length > 0 && computersData.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(ConstructorItem, {\n        item: item,\n        index: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Constructor, \"ohiZ5qxKr9Iw/Fal8ZOmg6HBkso=\");\n_c = Constructor;\nexport default Constructor;\nvar _c;\n$RefreshReg$(_c, \"Constructor\");","map":{"version":3,"names":["React","useEffect","useState","styles","ConstructorItem","fetchComputersData","jsxDEV","_jsxDEV","Constructor","_s","computersData","setComputersData","then","res","console","log","catch","error","finally","className","section","children","length","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/Constructor/Constructor.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport styles from './Constructor.module.css';\nimport ConstructorItem from '../ConstructorItem/ConstructorItem';\nimport ConstructorPlayStation from '../ConstructorPlayStation/ConstructorPlayStation';\nimport { fetchComputersData } from '../../utils/api';\n\n\nconst Constructor: FC = () => {\n    const [computersData, setComputersData] = useState<any[]>([]);\n\n    useEffect(() => {\n        // const getComputersData = async () => {\n        //     try {\n        //         const data = await fetchComputersData();\n        //         console.log({ data })\n        //         setComputersData(data);\n        //     } catch (error) {\n        //         // Обработка ошибки\n        //     }\n        // };\n        // getComputersData();\n        fetchComputersData()\n            .then(res => {\n                console.log({ res });\n                //   dispatch({ type: FETCH_GAMES_SUCCESS, payload: res });\n                //   setError(false)\n            })\n            .catch(error => {\n                //   dispatch({ type: FETCH_GAMES_FAILURE });\n                //   setError(true)\n            })\n            .finally(() => {\n                //   setIsLoading(false);\n            });\n    }, []);\n\n    return (\n        <article className={styles.section}>\n            {computersData.length > 0 && computersData.map((item: any, index: number) => {\n                return (\n                    <ConstructorItem item={item} index={index + 1} key={index} />\n                )\n            })}\n        </article>\n    );\n}\n\nexport default Constructor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,eAAe,MAAM,oCAAoC;AAEhE,SAASC,kBAAkB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrD,MAAMC,WAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAQ,EAAE,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAI,kBAAkB,CAAC,CAAC,CACfO,IAAI,CAACC,GAAG,IAAI;MACTC,OAAO,CAACC,GAAG,CAAC;QAAEF;MAAI,CAAC,CAAC;MACpB;MACA;IACJ,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACZ;MACA;IAAA,CACH,CAAC,CACDC,OAAO,CAAC,MAAM;MACX;IAAA,CACH,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA;IAASY,SAAS,EAAEhB,MAAM,CAACiB,OAAQ;IAAAC,QAAA,EAC9BX,aAAa,CAACY,MAAM,GAAG,CAAC,IAAIZ,aAAa,CAACa,GAAG,CAAC,CAACC,IAAS,EAAEC,KAAa,KAAK;MACzE,oBACIlB,OAAA,CAACH,eAAe;QAACoB,IAAI,EAAEA,IAAK;QAACC,KAAK,EAAEA,KAAK,GAAG;MAAE,GAAMA,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAErE,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAElB,CAAC;AAAApB,EAAA,CAtCKD,WAAe;AAAAsB,EAAA,GAAftB,WAAe;AAwCrB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}