{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/PlaygroundGrid/PlaygroundGrid.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './PlaygroundGrid.module.css';\nimport PlaygroundSquare from '../PlaygroundSquare/PlaygroundSquare';\nimport { fetchComputerGridReplace, fetchComputersData } from '../../utils/api';\nimport { useAppDispatch, useAppSelector } from '../../services/hooks/hooks';\nimport { FETCH_COMPUTERS_FAILURE, FETCH_COMPUTERS_REQUEST, FETCH_COMPUTERS_SUCCESS } from '../../services/actions/computers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaygroundGrid = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const playground = useAppSelector(store => store.playground.computers);\n  const gridSize = 200;\n  const [squares, setSquares] = useState([]);\n  const [dragStart, setDragStart] = useState();\n  const [newPlayground, setNewPlayground] = useState();\n  useEffect(() => {\n    const initialSquares = Array.from({\n      length: gridSize\n    }, (_, index) => {\n      return {\n        id: index\n      };\n    });\n    setSquares(initialSquares);\n  }, []);\n  const handleDragStart = (e, id) => {\n    setDragStart(id);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = (e, id) => {\n    e.preventDefault();\n    fetchComputerGridReplace(dragStart, id);\n    dispatch({\n      type: FETCH_COMPUTERS_REQUEST\n    });\n    fetchComputersData().then(res => {\n      dispatch({\n        type: FETCH_COMPUTERS_SUCCESS,\n        payload: res\n      });\n    }).catch(error => {\n      dispatch({\n        type: FETCH_COMPUTERS_FAILURE,\n        payload: error\n      });\n    });\n  };\n  const renderSquares = () => {\n    return squares.map(square => {\n      return /*#__PURE__*/_jsxDEV(PlaygroundSquare, {\n        id: square.id,\n        onDragStart: handleDragStart,\n        onDragOver: handleDragOver,\n        onDrop: handleDrop,\n        playground: playground\n      }, square.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: styles.article,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.grid,\n      children: renderSquares()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(PlaygroundGrid, \"YBHtXqBo0tfh4LPQpmgj+oL5l2g=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = PlaygroundGrid;\nexport default PlaygroundGrid;\nvar _c;\n$RefreshReg$(_c, \"PlaygroundGrid\");","map":{"version":3,"names":["React","useEffect","useState","styles","PlaygroundSquare","fetchComputerGridReplace","fetchComputersData","useAppDispatch","useAppSelector","FETCH_COMPUTERS_FAILURE","FETCH_COMPUTERS_REQUEST","FETCH_COMPUTERS_SUCCESS","jsxDEV","_jsxDEV","PlaygroundGrid","_s","dispatch","playground","store","computers","gridSize","squares","setSquares","dragStart","setDragStart","newPlayground","setNewPlayground","initialSquares","Array","from","length","_","index","id","handleDragStart","e","handleDragOver","preventDefault","handleDrop","type","then","res","payload","catch","error","renderSquares","map","square","onDragStart","onDragOver","onDrop","fileName","_jsxFileName","lineNumber","columnNumber","className","article","children","grid","_c","$RefreshReg$"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/PlaygroundGrid/PlaygroundGrid.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport styles from './PlaygroundGrid.module.css';\nimport { TComputer } from '../../services/types/types';\nimport PlaygroundSquare from '../PlaygroundSquare/PlaygroundSquare';\nimport { fetchComputerGridReplace, fetchComputersData } from '../../utils/api';\nimport { useAppDispatch, useAppSelector } from '../../services/hooks/hooks';\nimport { FETCH_COMPUTERS_FAILURE, FETCH_COMPUTERS_REQUEST, FETCH_COMPUTERS_SUCCESS } from '../../services/actions/computers';\n\nconst PlaygroundGrid: FC = () => {\n    const dispatch = useAppDispatch();\n\n    const playground = useAppSelector(\n        (store) => store.playground.computers\n    );\n\n    const gridSize = 200;\n    const [squares, setSquares] = useState<{ id: number }[]>([]);\n    const [dragStart, setDragStart] = useState<number>();\n    const [newPlayground, setNewPlayground] = useState<TComputer[]>();\n\n    useEffect(() => {\n        const initialSquares = Array.from({ length: gridSize }, (_, index) => {\n            return { id: index };\n        });\n        setSquares(initialSquares);\n    }, []);\n\n    const handleDragStart = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n        setDragStart(id);\n    };\n\n    const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n    };\n\n    const handleDrop = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n        e.preventDefault();\n\n        fetchComputerGridReplace(dragStart, id);\n\n        dispatch({ type: FETCH_COMPUTERS_REQUEST });\n        fetchComputersData()\n            .then(res => {\n                dispatch({ type: FETCH_COMPUTERS_SUCCESS, payload: res });\n            })\n            .catch(error => {\n                dispatch({ type: FETCH_COMPUTERS_FAILURE, payload: error });\n            });\n    };\n\n    const renderSquares = () => {\n        return squares.map((square) => {\n            return (\n                <PlaygroundSquare\n                    key={square.id}\n                    id={square.id}\n                    onDragStart={handleDragStart}\n                    onDragOver={handleDragOver}\n                    onDrop={handleDrop}\n                    playground={playground}\n                />\n            );\n        });\n    };\n\n    return (\n        <article className={styles.article}>\n            <div className={styles.grid}>\n                {renderSquares()}\n            </div>\n        </article>\n    );\n}\n\nexport default PlaygroundGrid;"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,MAAM,MAAM,6BAA6B;AAEhD,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,wBAAwB,EAAEC,kBAAkB,QAAQ,iBAAiB;AAC9E,SAASC,cAAc,EAAEC,cAAc,QAAQ,4BAA4B;AAC3E,SAASC,uBAAuB,EAAEC,uBAAuB,EAAEC,uBAAuB,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7H,MAAMC,cAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGT,cAAc,CAAC,CAAC;EAEjC,MAAMU,UAAU,GAAGT,cAAc,CAC5BU,KAAK,IAAKA,KAAK,CAACD,UAAU,CAACE,SAChC,CAAC;EAED,MAAMC,QAAQ,GAAG,GAAG;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAmB,EAAE,CAAC;EAC5D,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAS,CAAC;EACpD,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAc,CAAC;EAEjED,SAAS,CAAC,MAAM;IACZ,MAAM0B,cAAc,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEV;IAAS,CAAC,EAAE,CAACW,CAAC,EAAEC,KAAK,KAAK;MAClE,OAAO;QAAEC,EAAE,EAAED;MAAM,CAAC;IACxB,CAAC,CAAC;IACFV,UAAU,CAACK,cAAc,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,eAAe,GAAGA,CAACC,CAAkC,EAAEF,EAAU,KAAK;IACxET,YAAY,CAACS,EAAE,CAAC;EACpB,CAAC;EAED,MAAMG,cAAc,GAAID,CAAkC,IAAK;IAC3DA,CAAC,CAACE,cAAc,CAAC,CAAC;EACtB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAACH,CAAkC,EAAEF,EAAU,KAAK;IACnEE,CAAC,CAACE,cAAc,CAAC,CAAC;IAElBhC,wBAAwB,CAACkB,SAAS,EAAEU,EAAE,CAAC;IAEvCjB,QAAQ,CAAC;MAAEuB,IAAI,EAAE7B;IAAwB,CAAC,CAAC;IAC3CJ,kBAAkB,CAAC,CAAC,CACfkC,IAAI,CAACC,GAAG,IAAI;MACTzB,QAAQ,CAAC;QAAEuB,IAAI,EAAE5B,uBAAuB;QAAE+B,OAAO,EAAED;MAAI,CAAC,CAAC;IAC7D,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;MACZ5B,QAAQ,CAAC;QAAEuB,IAAI,EAAE9B,uBAAuB;QAAEiC,OAAO,EAAEE;MAAM,CAAC,CAAC;IAC/D,CAAC,CAAC;EACV,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxB,OAAOxB,OAAO,CAACyB,GAAG,CAAEC,MAAM,IAAK;MAC3B,oBACIlC,OAAA,CAACT,gBAAgB;QAEb6B,EAAE,EAAEc,MAAM,CAACd,EAAG;QACde,WAAW,EAAEd,eAAgB;QAC7Be,UAAU,EAAEb,cAAe;QAC3Bc,MAAM,EAAEZ,UAAW;QACnBrB,UAAU,EAAEA;MAAW,GALlB8B,MAAM,CAACd,EAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMjB,CAAC;IAEV,CAAC,CAAC;EACN,CAAC;EAED,oBACIzC,OAAA;IAAS0C,SAAS,EAAEpD,MAAM,CAACqD,OAAQ;IAAAC,QAAA,eAC/B5C,OAAA;MAAK0C,SAAS,EAAEpD,MAAM,CAACuD,IAAK;MAAAD,QAAA,EACvBZ,aAAa,CAAC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB,CAAC;AAAAvC,EAAA,CAhEKD,cAAkB;EAAA,QACHP,cAAc,EAEZC,cAAc;AAAA;AAAAmD,EAAA,GAH/B7C,cAAkB;AAkExB,eAAeA,cAAc;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}