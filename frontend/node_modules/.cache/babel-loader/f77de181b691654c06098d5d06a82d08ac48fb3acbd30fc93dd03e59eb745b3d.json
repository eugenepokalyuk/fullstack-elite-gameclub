{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/pages/StorePage/StorePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from \"./StorePage.module.css\";\nimport data from \"../../utils/store.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StorePage = () => {\n  _s();\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [paymentType, setPaymentType] = useState(\"card\");\n  useEffect(() => {\n    // При изменении выбранных товаров пересчитываем общую стоимость\n    const selectedProducts = data.filter(item => selectedItems.includes(item._id));\n    const price = selectedProducts.reduce((total, product) => total + product.price, 0);\n    setTotalPrice(price);\n  }, [selectedItems]);\n  const handleItemClick = itemId => {\n    if (selectedItems.includes(itemId)) {\n      setSelectedItems(selectedItems.filter(id => id !== itemId));\n    } else {\n      setSelectedItems([...selectedItems, itemId]);\n    }\n  };\n  const handlePaymentTypeChange = type => {\n    setPaymentType(type);\n  };\n  const handleAddToCart = () => {\n    const selectedProducts = data.filter(item => selectedItems.includes(item._id));\n    // Здесь вы можете выполнить действие добавления выбранных товаров в корзину, например, вызвать функцию или отправить данные на сервер.\n    console.log(\"Выбранные товары:\", selectedProducts);\n    console.log(\"Тип оплаты:\", paymentType);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(StorePage, \"EqF7eP5flhPC5U0U9hnNhfRF+Mc=\");\n_c = StorePage;\nvar _c;\n$RefreshReg$(_c, \"StorePage\");","map":{"version":3,"names":["React","useState","useEffect","styles","data","jsxDEV","_jsxDEV","StorePage","_s","selectedItems","setSelectedItems","totalPrice","setTotalPrice","paymentType","setPaymentType","selectedProducts","filter","item","includes","_id","price","reduce","total","product","handleItemClick","itemId","id","handlePaymentTypeChange","type","handleAddToCart","console","log","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/pages/StorePage/StorePage.tsx"],"sourcesContent":["import React, { FC, useState, useEffect } from 'react';\nimport styles from \"./StorePage.module.css\";\nimport data from \"../../utils/store.json\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCreditCard, faCoins } from '@fortawesome/free-solid-svg-icons';\n\nexport const StorePage: FC = () => {\n    const [selectedItems, setSelectedItems] = useState<any[]>([]);\n    const [totalPrice, setTotalPrice] = useState<number>(0);\n    const [paymentType, setPaymentType] = useState<string>(\"card\");\n\n    useEffect(() => {\n        // При изменении выбранных товаров пересчитываем общую стоимость\n        const selectedProducts = data.filter((item) => selectedItems.includes(item._id));\n        const price = selectedProducts.reduce((total, product) => total + product.price, 0);\n        setTotalPrice(price);\n    }, [selectedItems]);\n\n    const handleItemClick = (itemId: any) => {\n        if (selectedItems.includes(itemId)) {\n            setSelectedItems(selectedItems.filter((id) => id !== itemId));\n        } else {\n            setSelectedItems([...selectedItems, itemId]);\n        }\n    };\n\n    const handlePaymentTypeChange = (type: string) => {\n        setPaymentType(type);\n    };\n\n    const handleAddToCart = () => {\n        const selectedProducts = data.filter((item) => selectedItems.includes(item._id));\n        // Здесь вы можете выполнить действие добавления выбранных товаров в корзину, например, вызвать функцию или отправить данные на сервер.\n        console.log(\"Выбранные товары:\", selectedProducts);\n        console.log(\"Тип оплаты:\", paymentType);\n\n    };\n\n    return (\n        <main className={styles.container}>\n\n            <h1>Магазин</h1>\n\n            {/* <div className={`${styles.storeContainer} ${styles.mt4}`}>\n                <div className={styles.card}>\n                    <table className={styles.table}>\n                        <thead>\n                            <tr>\n                                <th>Название</th>\n                                <th>Стоимость</th>\n                                <th>Количество</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {data.map((item) => (\n                                <tr\n                                    key={item._id}\n                                    className={selectedItems.includes(item._id) ? styles.selectedRow : \"\"}\n                                    onClick={() => handleItemClick(item._id)}\n                                >\n                                    <td>{item.name}</td>\n                                    <td>{item.price}</td>\n                                    <td>{item.psc}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n\n                <div className={styles.cart}>\n                    <div className={styles.cartHeader}>\n                        <h2>Корзина</h2>\n                    </div>\n\n                    <div className={styles.cartBody}>\n                        {selectedItems.length > 0 ? (\n                            <ul>\n                                {selectedItems.map((itemId) => {\n                                    const item1 = data.find((item) => item._id === itemId);\n                                    return <li className={styles.listRow} key={itemId}>{item1?.name}</li>;\n                                })}\n                            </ul>\n                        ) : (\n                            <p>Корзина пуста</p>\n                        )}\n                    </div>\n\n                    <div className={styles.cartFooter}>\n\n                        <div className={`${styles.switcher}`}>\n                            <button\n                                className={`${styles.paymentButton} ${paymentType === \"card\" ? styles.activeButton : styles.nonActiveButton}`}\n                                onClick={() => handlePaymentTypeChange(\"card\")}\n                            >\n                                <FontAwesomeIcon icon={faCreditCard} /> Безналичный\n                            </button>\n                            <button\n                                className={`${styles.paymentButton} ${paymentType === \"cash\" ? styles.activeButton : styles.nonActiveButton}`}\n                                onClick={() => handlePaymentTypeChange(\"cash\")}\n                            >\n                                <FontAwesomeIcon icon={faCoins} /> Наличный\n                            </button>\n                        </div>\n\n                        <button className={`${styles.submitButton} ${styles.mt2}`} onClick={handleAddToCart} disabled={selectedItems.length === 0}>\n                            Оплатить\n                            <span>\n                                {totalPrice} руб.\n                            </span>\n                        </button>\n                    </div>\n                </div>\n            </div> */}\n        </main >\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1C,OAAO,MAAMC,SAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAQ,EAAE,CAAC;EAC7D,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAS,CAAC,CAAC;EACvD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAS,MAAM,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMa,gBAAgB,GAAGX,IAAI,CAACY,MAAM,CAAEC,IAAI,IAAKR,aAAa,CAACS,QAAQ,CAACD,IAAI,CAACE,GAAG,CAAC,CAAC;IAChF,MAAMC,KAAK,GAAGL,gBAAgB,CAACM,MAAM,CAAC,CAACC,KAAK,EAAEC,OAAO,KAAKD,KAAK,GAAGC,OAAO,CAACH,KAAK,EAAE,CAAC,CAAC;IACnFR,aAAa,CAACQ,KAAK,CAAC;EACxB,CAAC,EAAE,CAACX,aAAa,CAAC,CAAC;EAEnB,MAAMe,eAAe,GAAIC,MAAW,IAAK;IACrC,IAAIhB,aAAa,CAACS,QAAQ,CAACO,MAAM,CAAC,EAAE;MAChCf,gBAAgB,CAACD,aAAa,CAACO,MAAM,CAAEU,EAAE,IAAKA,EAAE,KAAKD,MAAM,CAAC,CAAC;IACjE,CAAC,MAAM;MACHf,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEgB,MAAM,CAAC,CAAC;IAChD;EACJ,CAAC;EAED,MAAME,uBAAuB,GAAIC,IAAY,IAAK;IAC9Cd,cAAc,CAACc,IAAI,CAAC;EACxB,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1B,MAAMd,gBAAgB,GAAGX,IAAI,CAACY,MAAM,CAAEC,IAAI,IAAKR,aAAa,CAACS,QAAQ,CAACD,IAAI,CAACE,GAAG,CAAC,CAAC;IAChF;IACAW,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEhB,gBAAgB,CAAC;IAClDe,OAAO,CAACC,GAAG,CAAC,aAAa,EAAElB,WAAW,CAAC;EAE3C,CAAC;EAED,oBACIP,OAAA;IAAM0B,SAAS,EAAE7B,MAAM,CAAC8B,SAAU;IAAAC,QAAA,eAE9B5B,OAAA;MAAA4B,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAwEb,CAAC;AAEhB,CAAC;AAAC9B,EAAA,CA7GWD,SAAa;AAAAgC,EAAA,GAAbhC,SAAa;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}