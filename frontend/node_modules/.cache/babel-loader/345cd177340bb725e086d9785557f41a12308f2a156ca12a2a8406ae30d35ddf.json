{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/Warehouse/Warehouse.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from \"./Warehouse.module.css\";\n// import data from \"../../utils/store.json\";\n\nimport { useAppSelector } from '../../services/hooks/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Warehouse = () => {\n  _s();\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [paymentType, setPaymentType] = useState(\"card\");\n  const storeItems = useAppSelector(store => store.store.items);\n  useEffect(() => {\n    // При изменении выбранных товаров пересчитываем общую стоимость\n    const selectedProducts = storeItems.filter(item => selectedItems.includes(item.id));\n    const price = selectedProducts.reduce((total, product) => total + product.price, 0);\n    setTotalPrice(price);\n  }, [selectedItems]);\n  const handleItemClick = itemId => {\n    if (selectedItems.includes(itemId)) {\n      setSelectedItems(selectedItems.filter(id => id !== itemId));\n    } else {\n      setSelectedItems([...selectedItems, itemId]);\n    }\n  };\n  const handlePaymentTypeChange = type => {\n    setPaymentType(type);\n  };\n  const handleAddToCart = () => {\n    const selectedProducts = storeItems.filter(item => selectedItems.includes(item.id));\n    // Здесь вы можете выполнить действие добавления выбранных товаров в корзину, например, вызвать функцию или отправить данные на сервер.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: `${styles.storeContainer} ${styles.mt4}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.card,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: storeItems.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: selectedItems.includes(item.id) ? styles.selectedRow : \"\",\n            onClick: () => handleItemClick(item.id),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.qty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Warehouse, \"RhuIeG0CEYJUSJcnRn7LiS8iLeE=\", false, function () {\n  return [useAppSelector];\n});\n_c = Warehouse;\nvar _c;\n$RefreshReg$(_c, \"Warehouse\");","map":{"version":3,"names":["React","useState","useEffect","styles","useAppSelector","jsxDEV","_jsxDEV","Warehouse","_s","selectedItems","setSelectedItems","totalPrice","setTotalPrice","paymentType","setPaymentType","storeItems","store","items","selectedProducts","filter","item","includes","id","price","reduce","total","product","handleItemClick","itemId","handlePaymentTypeChange","type","handleAddToCart","className","storeContainer","mt4","children","card","table","fileName","_jsxFileName","lineNumber","columnNumber","map","selectedRow","onClick","name","qty","_c","$RefreshReg$"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/Warehouse/Warehouse.tsx"],"sourcesContent":["import React, { FC, useState, useEffect } from 'react';\nimport styles from \"./Warehouse.module.css\";\n// import data from \"../../utils/store.json\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCreditCard, faCoins } from '@fortawesome/free-solid-svg-icons';\nimport { useAppSelector } from '../../services/hooks/hooks';\nimport { TStoreItem } from '../../services/types/types';\n\nexport const Warehouse: FC = () => {\n    const [selectedItems, setSelectedItems] = useState<any[]>([]);\n    const [totalPrice, setTotalPrice] = useState<number>(0);\n    const [paymentType, setPaymentType] = useState<string>(\"card\");\n\n    const storeItems = useAppSelector((store) => store.store.items);\n\n    useEffect(() => {\n        // При изменении выбранных товаров пересчитываем общую стоимость\n        const selectedProducts = storeItems.filter((item: TStoreItem) => selectedItems.includes(item.id));\n\n        const price = selectedProducts.reduce((total: number, product: TStoreItem) => total + product.price, 0);\n        setTotalPrice(price);\n    }, [selectedItems]);\n\n    const handleItemClick = (itemId: any) => {\n        if (selectedItems.includes(itemId)) {\n            setSelectedItems(selectedItems.filter((id) => id !== itemId));\n        } else {\n            setSelectedItems([...selectedItems, itemId]);\n        }\n    };\n\n    const handlePaymentTypeChange = (type: string) => {\n        setPaymentType(type);\n    };\n\n    const handleAddToCart = () => {\n        const selectedProducts = storeItems.filter((item: TStoreItem) => selectedItems.includes(item.id));\n        // Здесь вы можете выполнить действие добавления выбранных товаров в корзину, например, вызвать функцию или отправить данные на сервер.\n    };\n\n    return (\n        <article className={`${styles.storeContainer} ${styles.mt4}`}>\n            <div className={styles.card}>\n                <table className={styles.table}>\n                    <thead>\n                        <tr>\n                            <th>Название</th>\n                            <th>Стоимость</th>\n                            <th>Количество</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {storeItems.map((item: TStoreItem) => (\n                            <tr\n                                key={item.id}\n                                className={selectedItems.includes(item.id) ? styles.selectedRow : \"\"}\n                                onClick={() => handleItemClick(item.id)}\n                            >\n                                <td>{item.name}</td>\n                                <td>{item.price}</td>\n                                <td>{item.qty}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n\n            {/* <div className={styles.cart}>\n                <div className={styles.cartHeader}>\n                    <h2>Корзина</h2>\n                </div>\n\n                <div className={styles.cartBody}>\n                    {selectedItems.length > 0 ? (\n                        <ul>\n                            {selectedItems.map((itemId) => {\n                                const item1 = storeItems.find((item: TStoreItem) => item.id === itemId);\n                                return <li className={styles.listRow} key={itemId}>{item1?.name}</li>;\n                            })}\n                        </ul>\n                    ) : (\n                        <p>Корзина пуста</p>\n                    )}\n                </div>\n\n                <div className={styles.cartFooter}>\n\n                    <div className={`${styles.switcher}`}>\n                        <button\n                            className={`${styles.paymentButton} ${paymentType === \"card\" ? styles.activeButton : styles.nonActiveButton}`}\n                            onClick={() => handlePaymentTypeChange(\"card\")}\n                        >\n                            <FontAwesomeIcon icon={faCreditCard} /> Безналичный\n                        </button>\n                        <button\n                            className={`${styles.paymentButton} ${paymentType === \"cash\" ? styles.activeButton : styles.nonActiveButton}`}\n                            onClick={() => handlePaymentTypeChange(\"cash\")}\n                        >\n                            <FontAwesomeIcon icon={faCoins} /> Наличный\n                        </button>\n                    </div>\n\n                    <button className={`${styles.submitButton} ${styles.mt2}`} onClick={handleAddToCart} disabled={selectedItems.length === 0}>\n                        Оплатить\n                        <span>\n                            {totalPrice} руб.\n                        </span>\n                    </button>\n                </div>\n            </div> */}\n        </article>\n    );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}