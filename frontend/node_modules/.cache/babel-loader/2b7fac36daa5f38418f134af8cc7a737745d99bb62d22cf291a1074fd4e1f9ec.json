{"ast":null,"code":"const ApiUrlPath = 'http://localhost:8003';\n// const ApiUrlPath = 'https://norma.nomoreparties.space/api';\n\nconst request = (endpoint, options) => {\n  const url = `${ApiUrlPath}${endpoint}`;\n  return fetch(url, options).then(checkResponse);\n};\nconst checkResponse = res => {\n  return res.ok ? res.json() : res.json().then(err => Promise.reject(err));\n};\nexport const fetchComputersData = () => {\n  const endpoint = '/ping';\n  return request(endpoint, {}).then(res => {\n    if (res.success) return res.data;\n    return Promise.reject(res);\n  });\n  // mock data\n  // return data;\n};\n\n// export const fetchComputersData = async () => {\n//     // const response = await axios.get(`${ApiUrlPath}/ping`);\n//     // const response = axios({\n//     // method: 'get',\n//     // url: `${ApiUrlPath}/ping`,\n//     // withCredentials: false,\n//     // });\n//     // const response = await fetch(ApiUrlPath + \"/ping\");\n//     // // const data = await response.json();\n//     // // console.log({ data })\n//     // console.log('giz', await response.body)\n//     const response = fetch(ApiUrlPath + \"/ping\").then((Response) => {\n//         return Response.json()\n//     }).then((data) => {\n//         return data;\n//     })\n//     return response;\n// }","map":{"version":3,"names":["ApiUrlPath","request","endpoint","options","url","fetch","then","checkResponse","res","ok","json","err","Promise","reject","fetchComputersData","success","data"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/utils/api.ts"],"sourcesContent":["const ApiUrlPath = 'http://localhost:8003';\n// const ApiUrlPath = 'https://norma.nomoreparties.space/api';\n\nconst request = (endpoint: string, options: RequestInit) => {\n    const url = `${ApiUrlPath}${endpoint}`;\n    return fetch(url, options).then(checkResponse);\n}\nconst checkResponse = (res: Response) => {\n    return res.ok ? res.json() : res.json().then((err) => Promise.reject(err));\n};\nexport const fetchComputersData = () => {\n    const endpoint = '/ping';\n    return request(endpoint, {})\n        .then((res) => {\n            if (res.success) return res.data;\n            return Promise.reject(res);\n        });\n    // mock data\n    // return data;\n}\n\n// export const fetchComputersData = async () => {\n//     // const response = await axios.get(`${ApiUrlPath}/ping`);\n//     // const response = axios({\n//     // method: 'get',\n//     // url: `${ApiUrlPath}/ping`,\n//     // withCredentials: false,\n//     // });\n//     // const response = await fetch(ApiUrlPath + \"/ping\");\n//     // // const data = await response.json();\n//     // // console.log({ data })\n//     // console.log('giz', await response.body)\n//     const response = fetch(ApiUrlPath + \"/ping\").then((Response) => {\n//         return Response.json()\n//     }).then((data) => {\n//         return data;\n//     })\n//     return response;\n// }"],"mappings":"AAAA,MAAMA,UAAU,GAAG,uBAAuB;AAC1C;;AAEA,MAAMC,OAAO,GAAGA,CAACC,QAAgB,EAAEC,OAAoB,KAAK;EACxD,MAAMC,GAAG,GAAI,GAAEJ,UAAW,GAAEE,QAAS,EAAC;EACtC,OAAOG,KAAK,CAACD,GAAG,EAAED,OAAO,CAAC,CAACG,IAAI,CAACC,aAAa,CAAC;AAClD,CAAC;AACD,MAAMA,aAAa,GAAIC,GAAa,IAAK;EACrC,OAAOA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAGF,GAAG,CAACE,IAAI,CAAC,CAAC,CAACJ,IAAI,CAAEK,GAAG,IAAKC,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC,CAAC;AAC9E,CAAC;AACD,OAAO,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;EACpC,MAAMZ,QAAQ,GAAG,OAAO;EACxB,OAAOD,OAAO,CAACC,QAAQ,EAAE,CAAC,CAAC,CAAC,CACvBI,IAAI,CAAEE,GAAG,IAAK;IACX,IAAIA,GAAG,CAACO,OAAO,EAAE,OAAOP,GAAG,CAACQ,IAAI;IAChC,OAAOJ,OAAO,CAACC,MAAM,CAACL,GAAG,CAAC;EAC9B,CAAC,CAAC;EACN;EACA;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}