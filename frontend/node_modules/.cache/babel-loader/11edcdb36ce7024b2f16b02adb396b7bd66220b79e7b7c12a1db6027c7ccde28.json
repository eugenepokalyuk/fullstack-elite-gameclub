{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/PlaygroundGrid/PlaygroundGrid.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './PlaygroundGrid.module.css';\nimport PlaygroundSquare from '../PlaygroundSquare/PlaygroundSquare';\nimport { fetchComputerGridReplace } from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaygroundGrid = ({\n  playground\n}) => {\n  _s();\n  const gridSize = 200;\n  const squareSize = 18;\n  const [squares, setSquares] = useState([]);\n  const [gridPositionFrom, setGridPositionFrom] = useState();\n  const [gridPositionTo, setGridPositionTo] = useState();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    const initialSquares = Array.from({\n      length: gridSize\n    }, (_, index) => {\n      const x = index % gridSize * squareSize;\n      const y = Math.floor(index / gridSize) * squareSize;\n      return {\n        id: index,\n        position: {\n          x,\n          y\n        }\n      };\n    });\n    setSquares(initialSquares);\n  }, []);\n  const handleDragStart = (e, id) => {\n    setGridPositionFrom(id);\n    e.dataTransfer.setData(\"text/plain\", id.toString());\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = (e, id) => {\n    e.preventDefault();\n    const squareId = Number(e.dataTransfer.getData(\"text/plain\"));\n    const updatedSquares = squares.map(square => {\n      if (square.id === squareId) {\n        return {\n          ...square,\n          position: {\n            x: e.clientX,\n            y: e.clientY\n          }\n        };\n      }\n      return square;\n    });\n    setSquares(updatedSquares);\n    fetchComputerGridReplace(gridPositionFrom, id);\n    dispatch({\n      type: FETCH_COMPUTERS_REQUEST\n    });\n    fetchComputersData().then(res => {\n      dispatch({\n        type: FETCH_COMPUTERS_SUCCESS,\n        payload: res\n      });\n    }).catch(error => {\n      dispatch({\n        type: FETCH_COMPUTERS_FAILURE,\n        payload: error\n      });\n    });\n  };\n  const renderSquares = () => {\n    return squares.map(square => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PlaygroundSquare, {\n          id: square.id,\n          position: square.position,\n          onDragStart: handleDragStart,\n          onDragOver: handleDragOver,\n          onDrop: handleDrop,\n          playground: playground\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, square.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: styles.article,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.grid,\n      children: renderSquares()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(PlaygroundGrid, \"h+Lmcd5YrnzvPYvy6IsvZ4Ifsco=\", true);\n_c = PlaygroundGrid;\nexport default PlaygroundGrid;\nvar _c;\n$RefreshReg$(_c, \"PlaygroundGrid\");","map":{"version":3,"names":["React","useEffect","useState","styles","PlaygroundSquare","fetchComputerGridReplace","jsxDEV","_jsxDEV","PlaygroundGrid","playground","_s","gridSize","squareSize","squares","setSquares","gridPositionFrom","setGridPositionFrom","gridPositionTo","setGridPositionTo","dispatch","useAppDispatch","initialSquares","Array","from","length","_","index","x","y","Math","floor","id","position","handleDragStart","e","dataTransfer","setData","toString","handleDragOver","preventDefault","handleDrop","squareId","Number","getData","updatedSquares","map","square","clientX","clientY","type","FETCH_COMPUTERS_REQUEST","fetchComputersData","then","res","FETCH_COMPUTERS_SUCCESS","payload","catch","error","FETCH_COMPUTERS_FAILURE","renderSquares","children","onDragStart","onDragOver","onDrop","fileName","_jsxFileName","lineNumber","columnNumber","className","article","grid","_c","$RefreshReg$"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/PlaygroundGrid/PlaygroundGrid.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport styles from './PlaygroundGrid.module.css';\nimport { TComputer } from '../../services/types/types';\nimport PlaygroundSquare from '../PlaygroundSquare/PlaygroundSquare';\nimport { fetchComputerGridReplace } from '../../utils/api';\n\nconst PlaygroundGrid: FC<{ playground: TComputer[] }> = ({ playground }) => {\n    const gridSize = 200;\n    const squareSize = 18;\n    const [squares, setSquares] = useState<{ id: number; position: { x: number; y: number } }[]>([]);\n\n    const [gridPositionFrom, setGridPositionFrom] = useState<number>();\n    const [gridPositionTo, setGridPositionTo] = useState<number>();\n\n  const dispatch = useAppDispatch();\n\n  \n    useEffect(() => {\n        const initialSquares = Array.from({ length: gridSize }, (_, index) => {\n            const x = (index % gridSize) * squareSize;\n            const y = Math.floor(index / gridSize) * squareSize;\n            return { id: index, position: { x, y } };\n        });\n\n        setSquares(initialSquares);\n    }, []);\n\n    const handleDragStart = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n        setGridPositionFrom(id);\n\n        e.dataTransfer.setData(\"text/plain\", id.toString());\n    };\n\n    const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n    };\n\n    const handleDrop = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n        e.preventDefault();\n        const squareId = Number(e.dataTransfer.getData(\"text/plain\"));\n\n        const updatedSquares = squares.map((square) => {\n            if (square.id === squareId) {\n                return {\n                    ...square,\n                    position: { x: e.clientX, y: e.clientY },\n                };\n            }\n            return square;\n        });\n\n        setSquares(updatedSquares);\n        fetchComputerGridReplace(gridPositionFrom, id);\n\n        dispatch({ type: FETCH_COMPUTERS_REQUEST });\n        fetchComputersData()\n            .then(res => {\n                dispatch({ type: FETCH_COMPUTERS_SUCCESS, payload: res });\n            })\n            .catch(error => {\n                dispatch({ type: FETCH_COMPUTERS_FAILURE, payload: error });\n            });\n    };\n\n    const renderSquares = () => {\n        return squares.map((square) => {\n            return (\n                <div key={square.id}>\n                    <PlaygroundSquare\n                        id={square.id}\n                        position={square.position}\n                        onDragStart={handleDragStart}\n                        onDragOver={handleDragOver}\n                        onDrop={handleDrop}\n                        playground={playground}\n                    />\n                </div>\n            );\n        });\n    };\n\n    return (\n        <article className={styles.article}>\n            <div className={styles.grid}>\n                {renderSquares()}\n            </div>\n        </article>\n    );\n}\n\nexport default PlaygroundGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}