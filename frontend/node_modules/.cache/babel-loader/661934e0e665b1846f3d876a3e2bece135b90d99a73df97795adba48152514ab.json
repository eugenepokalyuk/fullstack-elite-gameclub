{"ast":null,"code":"const ApiUrlPath = 'http://localhost:8003';\nconst request = (endpoint, options) => {\n  const url = `${ApiUrlPath}${endpoint}`;\n  console.log(url);\n  return fetch(url, options).then(checkResponse);\n};\nconst checkResponse = res => {\n  return res.ok ? res.json() : res.json().then(err => Promise.reject(err));\n};\nexport const fetchComputersData = async () => {\n  const endpoint = \"/ping\";\n  const options = {\n    headers: {\n      auth: 123\n    }\n  };\n  return request(endpoint, options);\n};","map":{"version":3,"names":["ApiUrlPath","request","endpoint","options","url","console","log","fetch","then","checkResponse","res","ok","json","err","Promise","reject","fetchComputersData","headers","auth"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/utils/api.ts"],"sourcesContent":["const ApiUrlPath = 'http://localhost:8003';\n\nconst request = (endpoint: string, options: any) => {\n    const url = `${ApiUrlPath}${endpoint}`;\n    console.log(url)\n    return fetch(url, options).then(checkResponse);\n};\n\nconst checkResponse = (res: Response) => {\n    return res.ok ? res.json() : res.json().then((err) => Promise.reject(err));\n};\n\nexport const fetchComputersData = async () => {\n    const endpoint = \"/ping\";\n    const options = {\n        headers: {\n            auth: 123\n        },\n    }\n    return request(endpoint, options);\n}"],"mappings":"AAAA,MAAMA,UAAU,GAAG,uBAAuB;AAE1C,MAAMC,OAAO,GAAGA,CAACC,QAAgB,EAAEC,OAAY,KAAK;EAChD,MAAMC,GAAG,GAAI,GAAEJ,UAAW,GAAEE,QAAS,EAAC;EACtCG,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAChB,OAAOG,KAAK,CAACH,GAAG,EAAED,OAAO,CAAC,CAACK,IAAI,CAACC,aAAa,CAAC;AAClD,CAAC;AAED,MAAMA,aAAa,GAAIC,GAAa,IAAK;EACrC,OAAOA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAGF,GAAG,CAACE,IAAI,CAAC,CAAC,CAACJ,IAAI,CAAEK,GAAG,IAAKC,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC,CAAC;AAC9E,CAAC;AAED,OAAO,MAAMG,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMd,QAAQ,GAAG,OAAO;EACxB,MAAMC,OAAO,GAAG;IACZc,OAAO,EAAE;MACLC,IAAI,EAAE;IACV;EACJ,CAAC;EACD,OAAOjB,OAAO,CAACC,QAAQ,EAAEC,OAAO,CAAC;AACrC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}