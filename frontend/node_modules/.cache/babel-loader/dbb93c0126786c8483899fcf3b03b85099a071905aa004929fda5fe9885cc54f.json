{"ast":null,"code":"import{fetchComputersData}from\"../../utils/api\";export var FETCH_COMPUTERS_REQUEST=\"FETCH_COMPUTERS_REQUEST\";export var FETCH_COMPUTERS_SUCCESS=\"FETCH_COMPUTERS_SUCCESS\";export var FETCH_COMPUTERS_FAILURE=\"FETCH_COMPUTERS_FAILURE\";export var fetchComputersRequest=function fetchComputersRequest(){return{type:FETCH_COMPUTERS_REQUEST};};var ActionTypes=/*#__PURE__*/function(ActionTypes){ActionTypes[\"FETCH_COMPUTERS_REQUEST\"]=\"FETCH_COMPUTERS_REQUEST\";ActionTypes[\"FETCH_COMPUTERS_SUCCESS\"]=\"FETCH_COMPUTERS_SUCCESS\";ActionTypes[\"FETCH_COMPUTERS_FAILURE\"]=\"FETCH_COMPUTERS_FAILURE\";ActionTypes[\"FETCH_COMPUTERS_CLEAR\"]=\"FETCH_COMPUTERS_CLEAR\";ActionTypes[\"FETCH_CONSTRUCTOR_COMPUTERS_REQUEST\"]=\"FETCH_CONSTRUCTOR_COMPUTERS_REQUEST\";return ActionTypes;}(ActionTypes||{});export var fetchComputersSuccess=function fetchComputersSuccess(data){return{type:ActionTypes.FETCH_COMPUTERS_SUCCESS,payload:data};};export var fetchComputersFailure=function fetchComputersFailure(error){return{type:FETCH_COMPUTERS_FAILURE,payload:error};};export function getComputers(){return function(dispatch){dispatch({type:FETCH_COMPUTERS_REQUEST});fetchComputersData().then(function(res){dispatch(fetchComputersSuccess(res.data));}).catch(function(error){return dispatch(fetchComputersFailure(error));});};}","map":{"version":3,"names":["fetchComputersData","FETCH_COMPUTERS_REQUEST","FETCH_COMPUTERS_SUCCESS","FETCH_COMPUTERS_FAILURE","fetchComputersRequest","type","ActionTypes","fetchComputersSuccess","data","payload","fetchComputersFailure","error","getComputers","dispatch","then","res","catch"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/services/actions/computers.ts"],"sourcesContent":["import { fetchComputersData } from \"../../utils/api\";\nimport { useAppDispatch } from \"../hooks/hooks\";\n\nexport const FETCH_COMPUTERS_REQUEST: \"FETCH_COMPUTERS_REQUEST\" =\n    \"FETCH_COMPUTERS_REQUEST\";\nexport const FETCH_COMPUTERS_SUCCESS: \"FETCH_COMPUTERS_SUCCESS\" =\n    \"FETCH_COMPUTERS_SUCCESS\";\nexport const FETCH_COMPUTERS_FAILURE: \"FETCH_COMPUTERS_FAILURE\" =\n    \"FETCH_COMPUTERS_FAILURE\";\n\nexport type TComputers =\n    | IFetchComputersRequestAction\n    | IFetchComputersSuccessAction\n    | IFetchComputersFailureAction;\n\nexport interface IFetchComputersRequestAction {\n    readonly type: typeof FETCH_COMPUTERS_REQUEST;\n}\n\nexport interface IFetchComputersSuccessAction {\n    readonly type: typeof FETCH_COMPUTERS_SUCCESS;\n    readonly payload: any;\n}\n\nexport interface IFetchComputersFailureAction {\n    readonly type: typeof FETCH_COMPUTERS_FAILURE;\n    readonly payload: string;\n}\n\nexport const fetchComputersRequest = (): IFetchComputersRequestAction => ({\n    type: FETCH_COMPUTERS_REQUEST,\n});\n\nenum ActionTypes {\n    FETCH_COMPUTERS_REQUEST = \"FETCH_COMPUTERS_REQUEST\",\n    FETCH_COMPUTERS_SUCCESS = \"FETCH_COMPUTERS_SUCCESS\",\n    FETCH_COMPUTERS_FAILURE = \"FETCH_COMPUTERS_FAILURE\",\n    FETCH_COMPUTERS_CLEAR = \"FETCH_COMPUTERS_CLEAR\",\n    FETCH_CONSTRUCTOR_COMPUTERS_REQUEST = \"FETCH_CONSTRUCTOR_COMPUTERS_REQUEST\",\n}\n\nexport const fetchComputersSuccess = (\n    data: any[]\n): IFetchComputersSuccessAction => ({\n    type: ActionTypes.FETCH_COMPUTERS_SUCCESS,\n    payload: data,\n});\n\nexport const fetchComputersFailure = (\n    error: string\n): IFetchComputersFailureAction => ({\n    type: FETCH_COMPUTERS_FAILURE,\n    payload: error,\n});\n\nexport function getComputers() {\n    return function (dispatch: ReturnType<typeof useAppDispatch>) {\n        dispatch({\n            type: FETCH_COMPUTERS_REQUEST,\n        });\n\n        fetchComputersData()\n            .then((res) => {\n                dispatch(fetchComputersSuccess(res.data));\n            })\n            .catch((error) =>\n                dispatch(fetchComputersFailure(error))\n            );\n    };\n}"],"mappings":"AAAA,OAASA,kBAAkB,KAAQ,iBAAiB,CAGpD,MAAO,IAAM,CAAAC,uBAAkD,CAC3D,yBAAyB,CAC7B,MAAO,IAAM,CAAAC,uBAAkD,CAC3D,yBAAyB,CAC7B,MAAO,IAAM,CAAAC,uBAAkD,CAC3D,yBAAyB,CAqB7B,MAAO,IAAM,CAAAC,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAAA,QAAwC,CACtEC,IAAI,CAAEJ,uBACV,CAAC,EAAC,CAAC,GAEE,CAAAK,WAAW,uBAAXA,WAAW,EAAXA,WAAW,sDAAXA,WAAW,sDAAXA,WAAW,sDAAXA,WAAW,kDAAXA,WAAW,oFAAX,CAAAA,WAAW,GAAXA,WAAW,MAQhB,MAAO,IAAM,CAAAC,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAC9BC,IAAW,QACqB,CAChCH,IAAI,CAAEC,WAAW,CAACJ,uBAAuB,CACzCO,OAAO,CAAED,IACb,CAAC,EAAC,CAEF,MAAO,IAAM,CAAAE,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAC9BC,KAAa,QACmB,CAChCN,IAAI,CAAEF,uBAAuB,CAC7BM,OAAO,CAAEE,KACb,CAAC,EAAC,CAEF,MAAO,SAAS,CAAAC,YAAYA,CAAA,CAAG,CAC3B,MAAO,UAAUC,QAA2C,CAAE,CAC1DA,QAAQ,CAAC,CACLR,IAAI,CAAEJ,uBACV,CAAC,CAAC,CAEFD,kBAAkB,CAAC,CAAC,CACfc,IAAI,CAAC,SAACC,GAAG,CAAK,CACXF,QAAQ,CAACN,qBAAqB,CAACQ,GAAG,CAACP,IAAI,CAAC,CAAC,CAC7C,CAAC,CAAC,CACDQ,KAAK,CAAC,SAACL,KAAK,QACT,CAAAE,QAAQ,CAACH,qBAAqB,CAACC,KAAK,CAAC,CAAC,EAC1C,CAAC,CACT,CAAC,CACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}