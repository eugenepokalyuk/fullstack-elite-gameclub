{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/Constructor/Constructor.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './Constructor.module.css';\nimport { useAppSelector } from '../../services/hooks/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Square = ({\n  id,\n  position,\n  onDragStart,\n  onDragOver,\n  onDrop\n}) => {\n  const style = {\n    left: `${position.x}px`,\n    top: `${position.y}px`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.square,\n    draggable: true,\n    onDragStart: e => onDragStart(e, id),\n    onDragOver: e => onDragOver(e),\n    onDrop: e => onDrop(e, id),\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_c = Square;\nconst Grid = ({\n  playground\n}) => {\n  _s();\n  const gridSize = 220;\n  const squareSize = 18;\n  const [squares, setSquares] = useState([]);\n  useEffect(() => {\n    const initialSquares = Array.from({\n      length: gridSize\n    }, (_, index) => {\n      const x = index % gridSize * squareSize;\n      const y = Math.floor(index / gridSize) * squareSize;\n      return {\n        id: index,\n        position: {\n          x,\n          y\n        }\n      };\n    });\n    setSquares(initialSquares);\n  }, []);\n  const handleDragStart = (e, id) => {\n    console.log(\"handleDragStart\", {\n      e,\n      id\n    });\n    e.dataTransfer.setData(\"text/plain\", id.toString());\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    console.log(\"handleDragOver\", {\n      e\n    });\n  };\n  const handleDrop = (e, id) => {\n    e.preventDefault();\n    const squareId = Number(e.dataTransfer.getData(\"text/plain\"));\n    const updatedSquares = squares.map(square => {\n      if (square.id === squareId) {\n        return {\n          ...square,\n          position: {\n            x: e.clientX,\n            y: e.clientY\n          }\n        };\n      }\n      return square;\n    });\n    console.log(\"handleDrop\", {\n      e,\n      id\n    });\n    setSquares(updatedSquares);\n  };\n  const renderSquares = () => {\n    return squares.map(square => /*#__PURE__*/_jsxDEV(Square, {\n      id: square.id,\n      position: square.position,\n      onDragStart: handleDragStart,\n      onDragOver: handleDragOver,\n      onDrop: handleDrop\n    }, square.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.grid,\n    children: renderSquares()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 12\n  }, this);\n};\n_s(Grid, \"+I8Xw6B29f1JOxAQNg7JrZQdLMo=\");\n_c2 = Grid;\nconst Constructor = () => {\n  _s2();\n  const playground = useAppSelector(store => store.playground.computers);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: styles.section,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      playground: playground\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s2(Constructor, \"VU6irv/8aa1WjALHYLDVSKc9lg0=\", false, function () {\n  return [useAppSelector];\n});\n_c3 = Constructor;\nexport default Constructor;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"Constructor\");","map":{"version":3,"names":["React","useEffect","useState","styles","useAppSelector","jsxDEV","_jsxDEV","Square","id","position","onDragStart","onDragOver","onDrop","style","left","x","top","y","className","square","draggable","e","fileName","_jsxFileName","lineNumber","columnNumber","_c","Grid","playground","_s","gridSize","squareSize","squares","setSquares","initialSquares","Array","from","length","_","index","Math","floor","handleDragStart","console","log","dataTransfer","setData","toString","handleDragOver","preventDefault","handleDrop","squareId","Number","getData","updatedSquares","map","clientX","clientY","renderSquares","grid","children","_c2","Constructor","_s2","store","computers","section","_c3","$RefreshReg$"],"sources":["/Users/evgenijpokaluk/Documents/GitHub/fullstack-elite-gameclub/frontend/src/components/Constructor/Constructor.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport styles from './Constructor.module.css';\nimport ConstructorItem from '../ConstructorItem/ConstructorItem';\nimport { useAppSelector } from '../../services/hooks/hooks';\nimport { TComputer } from '../../services/types/types';\n\ninterface SquareProps {\n    id: number;\n    position: { x: number; y: number };\n    onDragStart: Function;\n    onDragOver: Function;\n    onDrop: Function;\n}\n\nconst Square: React.FC<SquareProps> = ({\n    id,\n    position,\n    onDragStart,\n    onDragOver,\n    onDrop,\n}) => {\n    const style = {\n        left: `${position.x}px`,\n        top: `${position.y}px`,\n    };\n\n    return (\n        <div\n            className={styles.square}\n            draggable\n            onDragStart={(e) => onDragStart(e, id)}\n            onDragOver={(e) => onDragOver(e)}\n            onDrop={(e) => onDrop(e, id)}\n            style={style}\n        />\n    );\n};\n\nconst Grid: FC<{ playground: TComputer[] }> = ({ playground }) => {\n    const gridSize = 220;\n    const squareSize = 18;\n    const [squares, setSquares] = useState<{ id: number; position: { x: number; y: number } }[]>([]);\n\n    useEffect(() => {\n        const initialSquares = Array.from({ length: gridSize }, (_, index) => {\n            const x = (index % gridSize) * squareSize;\n            const y = Math.floor(index / gridSize) * squareSize;\n            return { id: index, position: { x, y } };\n        });\n\n        setSquares(initialSquares);\n    }, []);\n\n    const handleDragStart = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n        console.log(\"handleDragStart\", {\n            e, id\n        });\n\n        e.dataTransfer.setData(\"text/plain\", id.toString());\n    };\n\n    const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n\n        console.log(\"handleDragOver\", {\n            e\n        });\n    };\n\n    const handleDrop = (e: React.DragEvent<HTMLDivElement>, id: number) => {\n        e.preventDefault();\n        const squareId = Number(e.dataTransfer.getData(\"text/plain\"));\n\n        const updatedSquares = squares.map((square) => {\n            if (square.id === squareId) {\n                return {\n                    ...square,\n                    position: { x: e.clientX, y: e.clientY },\n                };\n            }\n            return square;\n        });\n\n        console.log(\"handleDrop\", {\n            e, id\n        });\n\n        setSquares(updatedSquares);\n    };\n\n    const renderSquares = () => {\n        return squares.map((square) => (\n            <Square\n                key={square.id}\n                id={square.id}\n                position={square.position}\n                onDragStart={handleDragStart}\n                onDragOver={handleDragOver}\n                onDrop={handleDrop}\n            />\n        ));\n    };\n\n    return <div className={styles.grid}>{renderSquares()}</div>;\n};\n\nconst Constructor: FC = () => {\n    const playground = useAppSelector(\n        (store) => store.playground.computers\n    );\n\n    return (\n        <article className={styles.section}>\n            <Grid playground={playground} />\n            {/* {playground.length > 0 && playground.map((computer: TComputer, index: number) => {\n                return (\n                    <ConstructorItem computer={computer} index={index + 1} key={index} />\n                )\n            })} */}\n        </article>\n    );\n}\n\nexport default Constructor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}